<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CDDL HEADER START
  !
  ! The contents of this file are subject to the terms of the
  ! Common Development and Distribution License, Version 1.0 only
  ! (the "License").  You may not use this file except in compliance
  ! with the License.
  !
  ! You can obtain a copy of the license at
  ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
  ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! When distributing Covered Code, include this CDDL HEADER in each
  ! file and include the License file at
  ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
  ! add the following below this CDDL HEADER, with the fields enclosed
  ! by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CDDL HEADER END
  !
  !
  !      Copyright 2007-2008 Sun Microsystems, Inc.
  !      Portions Copyright 2011 ForgeRock AS
  ! -->
<adm:managed-object name="schema-backend" plural-name="schema-backends"
  package="org.opends.server.admin.std" extends="backend"
  advanced="true" xmlns:adm="http://www.opends.org/admin"
  xmlns:ldap="http://www.opends.org/admin-ldap">
  <adm:synopsis>
    The
    <adm:user-friendly-name />
    provides access to the directory server schema information,
    including the attribute types, object classes, attribute syntaxes,
    matching rules, matching rule uses, DIT content rules, and DIT
    structure rules that it contains.
  </adm:synopsis>
  <adm:description>
    The server allows "modify" operations in this backend to alter the
    server schema definitions. The configuration entry for this backend
    is based on the ds-cfg-schema-backend structural object class. Note
    that any attribute types included in this entry that are not
    included in this object class (or the parent ds-cfg-backend class)
    appears directly in the schema entry.
  </adm:description>
  <adm:profile name="ldap">
    <ldap:object-class>
      <ldap:name>ds-cfg-schema-backend</ldap:name>
      <ldap:superior>ds-cfg-backend</ldap:superior>
    </ldap:object-class>
  </adm:profile>
  <adm:property-override name="java-class" advanced="true">
    <adm:default-behavior>
      <adm:defined>
        <adm:value>org.opends.server.backends.SchemaBackend</adm:value>
      </adm:defined>
    </adm:default-behavior>
  </adm:property-override>
  <adm:property-override name="writability-mode">
    <adm:default-behavior>
      <adm:defined>
        <adm:value>enabled</adm:value>
      </adm:defined>
    </adm:default-behavior>
  </adm:property-override>
  <adm:property name="schema-entry-dn" advanced="true"
    multi-valued="true">
    <adm:synopsis>
      Defines the base DNs of the subtrees in which the schema
      information is published in addition to the value included
      in the base-dn property.
    </adm:synopsis>
    <adm:description>
      The value provided in the base-dn property is the only one that
      appears in the subschemaSubentry operational attribute of the
      server's root DSE (which is necessary because that is a
      single-valued attribute) and as a virtual attribute in other
      entries. The schema-entry-dn attribute may be used to make the
      schema information available in other locations to accommodate 
      certain client applications that have been hard-coded to expect the
      schema to reside in a specific location.
    </adm:description>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>cn=schema</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:dn />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:name>ds-cfg-schema-entry-dn</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="show-all-attributes" mandatory="true">
    <adm:synopsis>
      Indicates whether to treat all attributes in the schema entry as
      if they were user attributes regardless of their configuration.
    </adm:synopsis>
    <adm:description>
      This may provide compatibility with some applications that expect
      schema attributes like attributeTypes and objectClasses to be
      included by default even if they are not requested. Note that the
      ldapSyntaxes attribute is always treated as operational in
      order to avoid problems with attempts to modify the schema over
      protocol.
    </adm:description>
    <adm:syntax>
      <adm:boolean />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:name>ds-cfg-show-all-attributes</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
</adm:managed-object>
