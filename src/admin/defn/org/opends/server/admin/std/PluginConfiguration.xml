<?xml version="1.0" encoding="utf-8"?>
<!--
  ! CDDL HEADER START
  !
  ! The contents of this file are subject to the terms of the
  ! Common Development and Distribution License, Version 1.0 only
  ! (the "License").  You may not use this file except in compliance
  ! with the License.
  !
  ! You can obtain a copy of the license at
  ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
  ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! When distributing Covered Code, include this CDDL HEADER in each
  ! file and include the License file at
  ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
  ! add the following below this CDDL HEADER, with the fields enclosed
  ! by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CDDL HEADER END
  !
  !
  !      Copyright 2007-2010 Sun Microsystems, Inc.
  !      Portions Copyright 2011 ForgeRock AS
  ! -->
<adm:managed-object name="plugin" plural-name="plugins"
  package="org.opends.server.admin.std"
  xmlns:adm="http://www.opends.org/admin"
  xmlns:ldap="http://www.opends.org/admin-ldap"
  xmlns:cli="http://www.opends.org/admin-cli">
  <adm:synopsis>
    <adm:user-friendly-plural-name />
    provide a mechanism for executing custom code at specified points in
    operation processing and in the course of other events like
    connection establishment and termination, server startup and
    shutdown, and LDIF import and export.
  </adm:synopsis>
  <adm:tag name="core-server" />
  <adm:profile name="ldap">
    <ldap:object-class>
      <ldap:name>ds-cfg-plugin</ldap:name>
      <ldap:superior>top</ldap:superior>
    </ldap:object-class>
  </adm:profile>
  <adm:profile name="cli">
    <cli:managed-object custom="true" />
  </adm:profile>
  <adm:property name="enabled" mandatory="true">
    <adm:synopsis>
      Indicates whether the
      plug-in is enabled for use.
    </adm:synopsis>
    <adm:syntax>
      <adm:boolean />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:name>ds-cfg-enabled</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="java-class" mandatory="true">
    <adm:synopsis>
      Specifies the fully-qualified name of the Java class that provides the
      plug-in implementation.
    </adm:synopsis>
    <adm:syntax>
      <adm:java-class>
        <adm:instance-of>
          org.opends.server.api.plugin.DirectoryServerPlugin
        </adm:instance-of>
      </adm:java-class>
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:name>ds-cfg-java-class</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="plugin-type" mandatory="true"
    multi-valued="true">
    <adm:synopsis>
      Specifies the set of plug-in types for the plug-in, which specifies the times at which the plug-in is invoked. 
    </adm:synopsis>
    <adm:requires-admin-action>
      <adm:component-restart />
    </adm:requires-admin-action>
    <adm:syntax>
      <adm:enumeration>
        <adm:value name="startup">
          <adm:synopsis>
            Invoked during the directory server startup process.
          </adm:synopsis>
        </adm:value>
        <adm:value name="shutdown">
          <adm:synopsis>
            Invoked during a graceful directory server shutdown.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postconnect">
          <adm:synopsis>
            Invoked whenever a new connection is established to the
            server.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postdisconnect">
          <adm:synopsis>
            Invoked whenever an existing connection is terminated (by
            either the client or the server).
          </adm:synopsis>
        </adm:value>
        <adm:value name="ldifimport">
          <adm:synopsis>
            Invoked for each entry read during an LDIF import.
          </adm:synopsis>
        </adm:value>
        <adm:value name="ldifimportend">
          <adm:synopsis>
            Invoked at the end of an LDIF import session.
          </adm:synopsis>
        </adm:value>
        <adm:value name="ldifimportbegin">
          <adm:synopsis>
            Invoked at the beginning of an LDIF import session.
          </adm:synopsis>
        </adm:value>
        <adm:value name="ldifexport">
          <adm:synopsis>
            Invoked for each operation to be written during an LDIF
            export.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preparseabandon">
          <adm:synopsis>
            Invoked prior to parsing an abandon request.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preparseadd">
          <adm:synopsis>
            Invoked prior to parsing an add request.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preparsebind">
          <adm:synopsis>
            Invoked prior to parsing a bind request.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preparsecompare">
          <adm:synopsis>
            Invoked prior to parsing a compare request.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preparsedelete">
          <adm:synopsis>
            Invoked prior to parsing a delete request.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preparseextended">
          <adm:synopsis>
            Invoked prior to parsing an extended request.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preparsemodify">
          <adm:synopsis>
            Invoked prior to parsing a modify request.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preparsemodifydn">
          <adm:synopsis>
            Invoked prior to parsing a modify DN request.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preparsesearch">
          <adm:synopsis>
            Invoked prior to parsing a search request.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preparseunbind">
          <adm:synopsis>
            Invoked prior to parsing an unbind request.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preoperationadd">
          <adm:synopsis>
            Invoked prior to performing the core add processing.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preoperationbind">
          <adm:synopsis>
            Invoked prior to performing the core bind processing.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preoperationcompare">
          <adm:synopsis>
            Invoked prior to performing the core compare processing.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preoperationdelete">
          <adm:synopsis>
            Invoked prior to performing the core delete processing.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preoperationextended">
          <adm:synopsis>
            Invoked prior to performing the core extended processing.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preoperationmodify">
          <adm:synopsis>
            Invoked prior to performing the core modify processing.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preoperationmodifydn">
          <adm:synopsis>
            Invoked prior to performing the core modify DN processing.
          </adm:synopsis>
        </adm:value>
        <adm:value name="preoperationsearch">
          <adm:synopsis>
            Invoked prior to performing the core search processing.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postoperationabandon">
          <adm:synopsis>
            Invoked after completing the abandon processing.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postoperationadd">
          <adm:synopsis>
            Invoked after completing the core add processing but before
            sending the response to the client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postoperationbind">
          <adm:synopsis>
            Invoked after completing the core bind processing but before
            sending the response to the client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postoperationcompare">
          <adm:synopsis>
            Invoked after completing the core compare processing but
            before sending the response to the client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postoperationdelete">
          <adm:synopsis>
            Invoked after completing the core delete processing but
            before sending the response to the client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postoperationextended">
          <adm:synopsis>
            Invoked after completing the core extended processing but
            before sending the response to the client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postoperationmodify">
          <adm:synopsis>
            Invoked after completing the core modify processing but
            before sending the response to the client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postoperationmodifydn">
          <adm:synopsis>
            Invoked after completing the core modify DN processing but
            before sending the response to the client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postoperationsearch">
          <adm:synopsis>
            Invoked after completing the core search processing but
            before sending the response to the client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postoperationunbind">
          <adm:synopsis>
            Invoked after completing the unbind processing.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postresponseadd">
          <adm:synopsis>
            Invoked after sending the add response to the client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postresponsebind">
          <adm:synopsis>
            Invoked after sending the bind response to the client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postresponsecompare">
          <adm:synopsis>
            Invoked after sending the compare response to the client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postresponsedelete">
          <adm:synopsis>
            Invoked after sending the delete response to the client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postresponseextended">
          <adm:synopsis>
            Invoked after sending the extended response to the client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postresponsemodify">
          <adm:synopsis>
            Invoked after sending the modify response to the client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postresponsemodifydn">
          <adm:synopsis>
            Invoked after sending the modify DN response to the client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postresponsesearch">
          <adm:synopsis>
            Invoked after sending the search result done message to the
            client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postsynchronizationadd">
          <adm:synopsis>
            Invoked after completing post-synchronization processing for
            an add operation.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postsynchronizationdelete">
          <adm:synopsis>
            Invoked after completing post-synchronization processing for
            a delete operation.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postsynchronizationmodify">
          <adm:synopsis>
            Invoked after completing post-synchronization processing for
            a modify operation.
          </adm:synopsis>
        </adm:value>
        <adm:value name="postsynchronizationmodifydn">
          <adm:synopsis>
            Invoked after completing post-synchronization processing for
            a modify DN operation.
          </adm:synopsis>
        </adm:value>
        <adm:value name="searchresultentry">
          <adm:synopsis>
            Invoked before sending a search result entry to the client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="searchresultreference">
          <adm:synopsis>
            Invoked before sending a search result reference to the
            client.
          </adm:synopsis>
        </adm:value>
        <adm:value name="subordinatemodifydn">
          <adm:synopsis>
            Invoked in the course of moving or renaming an entry
            subordinate to the target of a modify DN operation.
          </adm:synopsis>
        </adm:value>
        <adm:value name="subordinatedelete">
          <adm:synopsis>
            Invoked in the course of deleting a subordinate
            entry of a delete operation.
          </adm:synopsis>
        </adm:value>
        <adm:value name="intermediateresponse">
          <adm:synopsis>
            Invoked before sending an intermediate repsonse message to
            the client.
          </adm:synopsis>
        </adm:value>
      </adm:enumeration>
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:name>ds-cfg-plugin-type</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
  <adm:property name="invoke-for-internal-operations" advanced="true">
    <adm:synopsis>
      Indicates whether the plug-in should be invoked for internal
      operations.
    </adm:synopsis>
    <adm:description>
      Any plug-in that can be invoked for internal operations
      must ensure that it does not create any new
      internal operatons that can cause the same plug-in to be
      re-invoked.
    </adm:description>
    <adm:default-behavior>
      <adm:defined>
        <adm:value>true</adm:value>
      </adm:defined>
    </adm:default-behavior>
    <adm:syntax>
      <adm:boolean />
    </adm:syntax>
    <adm:profile name="ldap">
      <ldap:attribute>
        <ldap:name>ds-cfg-invoke-for-internal-operations</ldap:name>
      </ldap:attribute>
    </adm:profile>
  </adm:property>
</adm:managed-object>
