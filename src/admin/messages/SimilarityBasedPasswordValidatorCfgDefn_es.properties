user-friendly-name=Validaci\u00f3n de contrase\u00f1as basada en similitudes
user-friendly-plural-name=Validaciones de contrase\u00f1as basadas en similitudes
synopsis=La validaci\u00f3n de contrase\u00f1as basadas en similitudes determina si una contrase\u00f1a propuesta es aceptable midiendo su grado de similitud con la contrase\u00f1a actual del usuario.
description=En concreto, utiliza el algoritmo de distancia de Levenshtein para determinar el n\u00famero m\u00ednimo de cambios (si un cambio consiste en insertar, eliminar o sustituir un car\u00e1cter) necesarios para transformar una cadena en otra. Se puede emplear para impedir que los usuarios lleven a cabo \u00fanicamente cambios menores en su contrase\u00f1a actual al configurar una nueva contrase\u00f1a. Tenga en cuenta que para que esta validaci\u00f3n de contrase\u00f1as sea eficaz es necesario disponer de acceso a la contrase\u00f1a actual del usuario. Por tanto, si se va a habilitar esta validaci\u00f3n de contrase\u00f1as, debe configurarse como True (verdadero) el atributo "el cambio de contrase\u00f1a requiere la contrase\u00f1a actual" en la configuraci\u00f3n de la pol\u00edtica de contrase\u00f1as.
property.enabled.synopsis=Indica si la validaci\u00f3n de contrase\u00f1as est\u00e1 habilitada para su uso.
property.java-class.synopsis=Especifica el nombre completamente calificado de la clase de Java que proporciona la implementaci\u00f3n de la validaci\u00f3n de contrase\u00f1as.
property.min-password-difference.synopsis=Especifica la diferencia m\u00ednima que debe existir entre una contrase\u00f1a nueva y una antigua.
property.min-password-difference.description=Un valor cero indica que ningunas diferencias entre contrase\u00f1as son aceptadas.
