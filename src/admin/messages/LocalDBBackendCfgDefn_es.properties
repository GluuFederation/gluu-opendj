user-friendly-name=Servidor de fondo de DB local
user-friendly-plural-name=Servidores de fondo de DB locales
synopsis=El servidor de fondo de DB local utiliza Berkeley DB Java Edition para almacenar los datos proporcionados por el usuario en un dep\u00f3sito local.
description=Se trata del servidor de fondo tradicional del "servidor de directorios" y es similar a los servidores de fondo proporcionados por Sun Java System Directory Server. El servidor de fondo de DB local almacena las entradas con un formato codificado y proporciona adem\u00e1s los \u00edndices que permiten localizar r\u00e1pidamente las entradas de destino en funci\u00f3n de los diferentes tipos de criterios.
property.backend-id.synopsis=Especifica un nombre que identifica al servidor de fondo (backend) asociado.
property.backend-id.description=El nombre debe ser \u00fanico entre todos los servidores de fondo (backend) del servidor. No se puede modificar el Id. de servidor de fondo (backend) una vez creado el servidor de fondo (backend) en el servidor.
property.base-dn.synopsis=Especifica el(los) ND de base de los datos que el servidor de fondo (backend) gestiona.
property.base-dn.description=Un \u00fanico servidor de fondo (backend) puede ser responsable de uno o m\u00e1s ND de base. Tenga en cuenta que es posible que dos servidores de fondo (backend) no tengan el mismo ND de base aunque uno pueda tener un ND de base que sea inferior al ND de base proporcionado por el otro servidor de fondo (similar al uso de sufijos secundarios en Sun Java System Directory Server). Si alguno de los ND de base est\u00e1 subordinado al ND de base del otro servidor de fondo (backend), entonces todos los ND de base de ese servidor de fondo deben estar subordinados al mismo ND de base.
property.base-dn.requires-admin-action.synopsis=No es necesaria ninguna acci\u00f3n administrativa de forma predeterminada aunque es posible que sea necesaria alguna acci\u00f3n conforme al servidor de fondo (backend) antes de que el nuevo ND de base est\u00e9 disponible.
property.compact-encoding.synopsis=Indica si el servidor de fondo debe utilizar un formato compacto al codificar las entradas comprimiendo los conjuntos de clases de objetos y las descripciones de atributos.
property.compact-encoding.description=Tenga en cuenta que esta propiedad s\u00f3lo hace referencia a las propias entradas, pero no afecta a los datos del \u00edndice.
property.compact-encoding.requires-admin-action.synopsis=Las modificaciones realizadas en este par\u00e1metro s\u00f3lo se aplicar\u00e1n en las operaciones de escritura que se realicen una vez efectuado el cambio. No se aplicar\u00e1n de forma retroactiva a los datos existentes.
property.db-cache-percent.synopsis=Especifica el porcentaje de memoria de JVM que se asignar\u00e1 a la cach\u00e9 de base de datos.
property.db-cache-percent.description=Especifica el porcentaje de memoria disponible en JVM que se utilizar\u00e1 para almacenar en la cach\u00e9 el contenido de la base de datos. Tenga en cuenta que esta opci\u00f3n s\u00f3lo se utilizar\u00e1 si se ha establecido la propiedad "db-cache-size" en "0 MB". De lo contrario, se utilizar\u00e1 el valor de esta propiedad en lugar de controlar la configuraci\u00f3n del tama\u00f1o de la cach\u00e9.
property.db-cache-size.synopsis=La cantidad de memoria de JVM que se asignar\u00e1 a la cach\u00e9 de base de datos.
property.db-cache-size.description=Especifica la cantidad de memoria que se utilizar\u00e1 para almacenar en la cach\u00e9 el contenido de la base de datos. El valor "0 MB" indica que debe usarse la propiedad "db-cache-percent" en lugar de especificar el tama\u00f1o de la cach\u00e9.
property.db-checkpointer-bytes-interval.synopsis=Especifica el n\u00famero m\u00e1ximo de bytes que se escribir\u00e1n en la base de datos antes de que se fuerce la creaci\u00f3n de un punto de control.
property.db-checkpointer-bytes-interval.description=Este elemento se puede utilizar para enlazar el periodo de recuperaci\u00f3n necesario si se encuentra abierto el entorno de la base de datos por no haberse cerrado correctamente. Si se establece esta propiedad en un valor distinto de cero, no se utilizar\u00e1 el intervalo de reactivaci\u00f3n del creador de puntos de control. Para utilizar la funci\u00f3n de creaci\u00f3n de puntos de control basada en tiempo, establezca esta propiedad en cero.
property.db-checkpointer-wakeup-interval.synopsis=Especifica el periodo de tiempo m\u00e1ximo que puede transcurrir entre puntos de control.
property.db-checkpointer-wakeup-interval.description=Tenga en cuenta que esta funci\u00f3n s\u00f3lo se utiliza si el valor del intervalo de bytes del creador de puntos de control es igual a cero.
property.db-cleaner-min-utilization.synopsis=Especifica el porcentaje m\u00e1ximo de datos "en vivo" que la aplicaci\u00f3n de limpieza de la base de datos mantiene en los archivos de registro de la base de datos.
property.db-cleaner-min-utilization.description=Si la cantidad de datos "en vivo" de cualquier archivo de registro de la base de datos desciende por debajo de este porcentaje, la aplicaci\u00f3n de limpieza transferir\u00e1 los datos "en vivo" restantes de ese archivo al final de la base de datos y eliminar\u00e1 el archivo original para mantener la base de datos relativamente comprimida.
property.db-directory.synopsis=Especifica la ruta al directorio del sistema de archivos que se utiliza para mantener los archivos de la base de datos Berkeley DB Java Edition que contienen los datos de este servidor de fondo.
property.db-directory.description=Puede utilizarse una ruta absoluta o una relativa al directorio que contenga la base de la instalaci\u00f3n de OpenDJ. Puede utilizarse cualquier ruta de directorio v\u00e1lida para la que el servidor tenga los permisos de lectura y escritura de archivos adecuados y el suficiente espacio para mantener el contenido de la base de datos.
property.db-directory-permissions.synopsis=Especifica los permisos que deben aplicarse al directorio que contenga los archivos de base de datos del servidor.
property.db-directory-permissions.description=Deben expresarse en forma de valores octales de tres d\u00edgitos, que supone la representaci\u00f3n tradicional de los permisos de archivo de UNIX. Los tres d\u00edgitos representan los permisos disponibles para el propietario del directorio, los miembros del grupo y los dem\u00e1s usuarios (en ese orden) y cada d\u00edgito es la representaci\u00f3n octal de los bits de lectura, escritura y ejecuci\u00f3n. Tenga en cuenta que esto s\u00f3lo afecta a los permisos del directorio de la base de datos y no a los archivos que se escriban en \u00e9l. En los sistemas UNIX, la funci\u00f3n "umask" del usuario controla los permisos concedidos a los archivos de base de datos.
property.db-directory-permissions.syntax.string.pattern.synopsis=Cualquier valor octal entre 700 y 777 (el propietario debe tener siempre permisos de lectura, escritura y ejecuci\u00f3n en el directorio).
property.db-evictor-lru-only.synopsis=Indica si la base de datos debe expulsar los datos existentes de la cach\u00e9 en funci\u00f3n de la directiva de LRU (se expulsar\u00e1 en primer lugar la informaci\u00f3n menos reciente).
property.db-evictor-lru-only.description=Si se establece este valor en "false" (falso), al realizar la expulsi\u00f3n se conservar\u00e1n los nodos internos del nodo "Btree" subyacente de la cach\u00e9 a trav\u00e9s de los nodos de hojas, incluso aunque se haya accedido a \u00e9stos m\u00e1s recientemente. Puede resultar una configuraci\u00f3n m\u00e1s eficaz para las bases de datos en la que s\u00f3lo se almacena en la cach\u00e9 una peque\u00f1a parte de los datos.
property.db-evictor-nodes-per-scan.synopsis=Especifica el n\u00famero de nodos "Btree" que deben expulsarse de la cach\u00e9 en un \u00fanico pase si se considera necesario suprimir los datos existentes con el fin de liberar espacio para la nueva informaci\u00f3n.
property.db-evictor-nodes-per-scan.description=Los cambios realizados en esta propiedad no se aplicar\u00e1n hasta que se reinicie el servidor de fondo. Es recomendable modificar tambi\u00e9n esta propiedad si se ha establecido "set db-evictor-lru-only" en "false" (falso). Este valor de configuraci\u00f3n controla el n\u00famero de nodos "Btree" que se examinan (o analizan) cada vez que se expulsa un nodo. El valor 10 suele dar buenos resultados, aunque esto var\u00eda de una aplicaci\u00f3n a otra. Cuanto mayor sea el nodo que se analice, m\u00e1s preciso ser\u00e1 el algoritmo. Sin embargo, puede resultar perjudicial definir este par\u00e1metro en un valor excesivamente alto. La necesidad de examinar un n\u00famero elevado de nodos en cada expulsi\u00f3n puede retrasar la finalizaci\u00f3n de una determinada operaci\u00f3n de la base de datos, lo que podr\u00eda afectar al tiempo de respuesta del subproceso de la aplicaci\u00f3n.
property.db-log-file-max.synopsis=Especifica el tama\u00f1o m\u00e1ximo de un archivo de registro de la base de datos.
property.db-logging-file-handler-on.synopsis=Indica si la base de datos debe mantener el archivo "je.info" en el mismo directorio que el del registro de la base de datos.
property.db-logging-file-handler-on.description=Este archivo contiene informaci\u00f3n sobre el procesamiento interno realizado por la base de datos subyacente.
property.db-logging-level.synopsis=Especifica el nivel de registro que debe utilizar la base de datos al escribir informaci\u00f3n en el archivo "je.info".
property.db-logging-level.description=Los niveles de registro de seguimiento de la base de datos (en orden creciente de nivel de detalles) que se pueden seleccionar son: OFF, SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST y ALL.
property.db-num-cleaner-threads.synopsis=Especifica el n\u00famero de subprocesos que debe presentar el servidor de fondo para mantener los archivos de registro de la base de datos al nivel exacto de uso deseado o a uno aproximado.
property.db-num-cleaner-threads.description=En entornos con un alto rendimiento de escritura, es posible que se necesiten varios subprocesos de limpieza para mantener el nivel de uso deseado.
property.db-num-cleaner-threads.default-behavior.alias.synopsis=Dejar que el servidor decida.
property.db-num-lock-tables.synopsis=Especifica el n\u00famero de tablas de bloqueo que utilizar\u00e1 la base de datos subyacente.
property.db-num-lock-tables.description=Esta propiedad puede resultar especialmente importante para mejorar la escalabilidad evitando la contenci\u00f3n en los sistemas con un elevado n\u00famero de CPU. El valor de esta propiedad de configuraci\u00f3n debe establecerse en un n\u00famero primo inferior o igual al n\u00famero de subprocesos de trabajo configurados para su uso en el servidor.
property.db-num-lock-tables.default-behavior.alias.synopsis=Dejar que el servidor decida.
property.db-run-cleaner.synopsis=Indica si deben habilitarse los subprocesos de limpieza de la base de datos.
property.db-run-cleaner.description=Los subprocesos de limpieza se utilizan para comprimir peri\u00f3dicamente la base de datos. Para ello, se identifican los archivos de base de datos con un porcentaje bajo (es decir, inferior a la cantidad especificada en la propiedad "db-cleaner-min-utilization") de datos "en vivo", se transfieren los datos "en vivo" restantes al final de registro y se elimina este archivo.
property.db-txn-no-sync.synopsis=Indica si las operaciones de escritura de la base de datos deben realizarse fundamentalmente en un b\u00fafer interno, pero no efectuarse inmediatamente en un disco.
property.db-txn-no-sync.description=Si se establece el valor de este atributo de configuraci\u00f3n en "true" (verdadero), es posible que mejore el rendimiento de escritura, pero podr\u00eda provocar la p\u00e9rdida de los cambios m\u00e1s recientes si se sale de forma anormal de la m\u00e1quina JVM subyacente o de OpenDJ, o si se produce un error en el SO o el hardware (un comportamiento similar a la ejecuci\u00f3n de Sun Java System Directory Server con la funci\u00f3n de durabilidad de las transacciones deshabilitada).
property.db-txn-write-no-sync.synopsis=Indica si la base de datos debe vaciar los datos de forma sincr\u00f3nica a medida que se escriben en el disco.
property.db-txn-write-no-sync.description=Si este valor se establece en "false" (falso), todos los datos escritos en el disco se vaciar\u00e1n de forma sincr\u00f3nica en el almacenamiento persistente, lo que proporcionar\u00eda una durabilidad completa. Si, por el contrario, se establece en "true" (verdadero), es posible que el sistema operativo subyacente almacene los datos en la cach\u00e9 durante un periodo de tiempo espec\u00edfico antes de escribirlos realmente en el disco. Esto puede mejorar el rendimiento, pero podr\u00eda provocar la p\u00e9rdida de los cambios m\u00e1s recientes en caso de que produzca un error en el SO subyacente o el hardware (aunque no si se sale de forma anormal de JVM o de OpenDJ).
property.disk-full-threshold.synopsis=Umbral de disco lleno para limitar las actualizaciones de la base de datos
property.disk-full-threshold.description=Cuando el espacio libre disponible en el disco utilizado por esta instancia de base de datos es inferior al valor especificado, no se permiten las actualizaciones y el servidor muestra el error UNWILLING_TO_PERFORM. Las actualizaciones vuelven a permitirse tan pronto como el espacio libre supere el umbral.
property.disk-low-threshold.synopsis=Umbral de espacio escaso en el disco para limitar las actualizaciones de la base de datos
property.disk-low-threshold.description=Especifica una cantidad "escasa" de espacio libre en el disco. Cuando el espacio libre disponible en el disco utilizado por esta instancia de base de datos es inferior al valor especificado, s\u00f3lo un usuario con el privilegio BYPASS_LOCKDOWN puede realizar actualizaciones de protocolo en esta base de datos.
property.enabled.synopsis=Indica si el servidor de fondo (backend) est\u00e1 habilitado en el servidor.
property.enabled.description=Si un servidor de fondo (backend) no est\u00e1 habilitado, no se podr\u00e1 acceder a su contenido cuando haya operaciones en proceso.
property.entries-compressed.synopsis=Indica si el servidor de fondo debe intentar comprimir las entradas antes de almacenarlas en la base de datos.
property.entries-compressed.description=Tenga en cuenta que esta propiedad s\u00f3lo hace referencia a las propias entradas, pero no afecta a los datos del \u00edndice. Adem\u00e1s, la eficacia de la compresi\u00f3n depende del tipo de datos que contenga la entrada.
property.entries-compressed.requires-admin-action.synopsis=Las modificaciones realizadas en este par\u00e1metro s\u00f3lo se aplicar\u00e1n en las operaciones de escritura que se realicen una vez efectuado el cambio. No se aplicar\u00e1n de forma retroactiva a los datos existentes.
property.import-queue-size.synopsis=Este par\u00e1metro se ha desaprobado en OpenDS 2.1 y se eliminar\u00e1 en OpenDJ 3.0. S\u00f3lo se mantiene para aligerar la migraci\u00f3n y se ignorar\u00e1 en las versiones de OpenDS posteriores a la 2.0.
property.import-queue-size.requires-admin-action.synopsis=Este par\u00e1metro se ha desaprobado en OpenDS 2.1 y se eliminar\u00e1 en OpenDJ 3.0. S\u00f3lo se mantiene para aligerar la migraci\u00f3n y se ignorar\u00e1 en las versiones de OpenDS posteriores a la 2.0.
property.import-thread-count.synopsis=Este par\u00e1metro se ha desaprobado en OpenDS 2.1 y se eliminar\u00e1 en OpenDJ 3.0. S\u00f3lo se mantiene para aligerar la migraci\u00f3n y se ignorar\u00e1 en las versiones de OpenDS posteriores a la 2.0.
property.import-thread-count.description=Este par\u00e1metro se ha desaprobado en OpenDS 2.1 y se eliminar\u00e1 en OpenDJ 3.0. S\u00f3lo se mantiene para aligerar la migraci\u00f3n y se ignorar\u00e1 en las versiones de OpenDS posteriores a la 2.0.
property.import-thread-count.requires-admin-action.synopsis=Estos cambios no se aplicar\u00e1n en cualquier importaci\u00f3n que ya est\u00e9 en curso.
property.index-entry-limit.synopsis=Especifica el n\u00famero m\u00e1ximo de entradas que pueden coincidir con una determinada clave de \u00edndice antes de que se deje de conservar.
property.index-entry-limit.description=Esta propiedad es an\u00e1loga al Umbral de todos los Id. de Sun Java System Directory Server. Tenga en cuenta que se trata del l\u00edmite predeterminado del servidor de fondo y que puede anularse en funci\u00f3n de cada atributo. El valor 0 indica que no hay ning\u00fan l\u00edmite.
property.index-entry-limit.requires-admin-action.synopsis=Si alguna de las claves de \u00edndices ya han alcanzado este l\u00edmite, se deben volver a generar los \u00edndices antes de que se les permita utilizar el nuevo l\u00edmite.
property.java-class.synopsis=Especifica el nombre completo de la clase de Java que proporciona la implementaci\u00f3n del servidor de fondo (backend).
property.je-property.synopsis=Especifica las propiedades de base de datos y entorno de la instancia de Berkeley DB Java Edition que mantiene los datos de este servidor de fondo.
property.je-property.description=Se puede especificar cualquier propiedad de Berkeley DB Java Edition mediante el siguiente formato: nombre de la propiedad=valor de la propiedad. Consulte la documentaci\u00f3n de OpenDJ para obtener m\u00e1s informaci\u00f3n sobre las propiedades relacionadas, sus implicaciones y los valores de rango. La identificaci\u00f3n definitiva de todos los par\u00e1metros de propiedades se encuentra disponible en el archivo "example.properties" de la distribuci\u00f3n de Berkeley DB Java Edition.
property.preload-time-limit.synopsis=Especifica el periodo de tiempo que puede dedicar el servidor de fondo a la carga previa de los datos antes de inicializarse.
property.preload-time-limit.description=El proceso de carga previa se utiliza para llenar de antemano la cach\u00e9 de la base de datos con el fin de que pueda estar disponible con mayor rapidez cuando el servidor est\u00e9 procesando las solicitudes. Un valor de duraci\u00f3n cero indica que no habr\u00e1 carga previa.
property.writability-mode.synopsis=Especifica el comportamiento que el servidor de fondo (backend) debe tener durante el procesamiento de operaciones de escritura.
property.writability-mode.syntax.enumeration.value.disabled.synopsis=Causa errores en todos los intentos de escritura.
property.writability-mode.syntax.enumeration.value.enabled.synopsis=Permite que se realicen operaciones de escritura en ese servidor de fondo (si la operaci\u00f3n solicitada es v\u00e1lida, el usuario tiene permiso para realizar esa operaci\u00f3n, el servidor de fondo admite ese tipo de operaci\u00f3n de escritura y tambi\u00e9n est\u00e1 habilitada la propiedad de modo de escritura global).
property.writability-mode.syntax.enumeration.value.internal-only.synopsis=Causa errores en los intentos de escritura externa, sin embargo permite la escritura mediante operaciones internas y de repetici\u00f3n.
relation.local-db-index.user-friendly-name=\u00cdndice de DB local
relation.local-db-index.user-friendly-plural-name=\u00cdndices de DB locales
relation.local-db-index.synopsis=Los \u00edndices de DB locales se utilizan para almacenar informaci\u00f3n que permita localizar r\u00e1pidamente las entradas al procesar operaciones de b\u00fasqueda.
relation.local-db-index.description=La indexaci\u00f3n se realiza por nivel de atributos. Se pueden realizar diferentes tipos de indexaci\u00f3n para distintas clases de atributos en funci\u00f3n de c\u00f3mo se tenga previsto acceder a ellas durante las operaciones de b\u00fasqueda.
relation.local-db-vlv-index.user-friendly-name=\u00cdndice VLV de DB local
relation.local-db-vlv-index.user-friendly-plural-name=\u00cdndices VLV de DB locales
relation.local-db-vlv-index.synopsis=Los \u00edndices VLV de DB locales se utilizan para almacenar informaci\u00f3n acerca de una solicitud de b\u00fasqueda espec\u00edfica que permita procesarlos eficazmente mediante el control VLV.
relation.local-db-vlv-index.description=Un \u00edndice VLV notifica de forma eficaz al servidor que se llevar\u00e1 a cabo una vista de lista virtual con par\u00e1metros de ordenaci\u00f3n y consulta espec\u00edficos. Este \u00edndice permite tambi\u00e9n al servidor recopilar y conservar de forma m\u00e1s r\u00e1pida la informaci\u00f3n solicitada mediante la vista de lista virtual.
