user-friendly-name=Password Policy
user-friendly-plural-name=Password Policies
synopsis=Password Policies define a number of password management rules, as well as requirements for authentication processing.
property.account-status-notification-handler.synopsis=Specifies the names of the account status notification handlers that are used with the associated password storage scheme.
property.account-status-notification-handler.syntax.aggregation.constraint-synopsis=The referenced account status notification handlers must be enabled.
property.allow-expired-password-changes.synopsis=Indicates whether a user whose password is expired is still allowed to change that password using the password modify extended operation.
property.allow-multiple-password-values.synopsis=Indicates whether user entries can have multiple distinct values for the password attribute.
property.allow-multiple-password-values.description=\u9019\u6709\u6f5b\u5728\u7684\u5371\u96aa\u6027\uff0c\u56e0\u70ba\u8a31\u591a\u7528\u4f86\u8b8a\u66f4\u5bc6\u78bc\u7684\u6a5f\u5236\u7121\u6cd5\u8207\u9019\u985e\u914d\u7f6e\u540c\u6642\u904b\u884c\u3002If multiple password values are allowed, then any of them can be used to authenticate, and they are all subject to the same policy constraints.
property.allow-pre-encoded-passwords.synopsis=Indicates whether users can change their passwords by providing a pre-encoded value.
property.allow-pre-encoded-passwords.description=\u9019\u53ef\u80fd\u9020\u6210\u5b89\u5168\u6027\u98a8\u96aa\uff0c\u56e0\u70ba\u7121\u6cd5\u8b58\u5225\u7d14\u6587\u5b57\u7248\u7684\u5bc6\u78bc\uff0c\u56e0\u6b64\u7121\u6cd5\u5957\u7528\u9a57\u8b49\u6aa2\u67e5\u3002
property.allow-user-password-changes.synopsis=Indicates whether users can change their own passwords.
property.allow-user-password-changes.description=This check is made in addition to access control evaluation. Both must allow the password change for it to occur.
property.default-password-storage-scheme.synopsis=Specifies the names of the password storage schemes that are used to encode clear-text passwords for this password policy.
property.default-password-storage-scheme.syntax.aggregation.constraint-synopsis=The referenced password storage schemes must be enabled.
property.deprecated-password-storage-scheme.synopsis=Specifies the names of the password storage schemes that are considered deprecated for this password policy.
property.deprecated-password-storage-scheme.description=If a user with this password policy authenticates to the server and his/her password is encoded with a deprecated scheme, those values are removed and replaced with values encoded using the default password storage scheme(s).
property.deprecated-password-storage-scheme.syntax.aggregation.constraint-synopsis=The referenced password storage schemes must be enabled.
property.expire-passwords-without-warning.synopsis=Indicates whether the Directory Server allows a user's password to expire even if that user has never seen an expiration warning notification.
property.expire-passwords-without-warning.description=If this property is true, accounts always expire when the expiration time arrives. If this property is false disabled, the user always receives at least one warning notification, and the password expiration is set to the warning time plus the warning interval.
property.force-change-on-add.synopsis=Indicates whether users are forced to change their passwords upon first authenticating to the Directory Server after their account has been created.
property.force-change-on-reset.synopsis=Indicates whether users are forced to change their passwords if they are reset by an administrator.
property.force-change-on-reset.description=For this purpose, anyone with permission to change a given user's password other than that user is considered an administrator.
property.grace-login-count.synopsis=Specifies the number of grace logins that a user is allowed after the account has expired to allow that user to choose a new password.
property.grace-login-count.description=A value of 0 indicates that no grace logins are allowed.
property.idle-lockout-interval.synopsis=Specifies the maximum length of time that an account may remain idle (that is, the associated user does not authenticate to the server) before that user is locked out.
property.idle-lockout-interval.description=The value of this attribute is an integer followed by a unit of seconds, minutes, hours, days, or weeks. A value of 0 seconds indicates that idle accounts are not automatically locked out. This feature is available only if the last login time is maintained.
property.last-login-time-attribute.synopsis=Specifies the name or OID of the attribute type that is used to hold the last login time for users with the associated password policy.
property.last-login-time-attribute.description=This attribute type must be defined in the Directory Server schema and must either be defined as an operational attribute or must be allowed by the set of objectClasses for all users with the associated password policy.
property.last-login-time-format.synopsis=Specifies the format string that is used to generate the last login time value for users with the associated password policy.
property.last-login-time-format.description=This format string conforms to the syntax described in the API documentation for the java.text.SimpleDateFormat class.
property.last-login-time-format.syntax.string.pattern.synopsis=Any valid format string that can be used with the java.text.SimpleDateFormat class.
property.lockout-duration.synopsis=Specifies the length of time that an account is locked after too many authentication failures.
property.lockout-duration.description=The value of this attribute is an integer followed by a unit of seconds, minutes, hours, days, or weeks. A value of 0 seconds indicates that the account must remain locked until an administrator resets the password.
property.lockout-failure-count.synopsis=Specifies the maximum number of authentication failures that a user is allowed before the account is locked out.
property.lockout-failure-count.description=A value of 0 indicates that accounts are never locked out due to failed attempts.
property.lockout-failure-expiration-interval.synopsis=Specifies the length of time before an authentication failure is no longer counted against a user for the purposes of account lockout.
property.lockout-failure-expiration-interval.description=The value of this attribute is an integer followed by a unit of seconds, minutes, hours, days, or weeks. A value of 0 seconds indicates that the authentication failures must never expire. The failure count is always cleared upon a successful authentication.
property.max-password-age.synopsis=Specifies the maximum length of time that a user can continue using the same password before it must be changed (that is, the password expiration interval).
property.max-password-age.description=The value of this attribute is an integer followed by a unit of seconds, minutes, hours, days, or weeks. A value of 0 seconds disables password expiration.
property.max-password-reset-age.synopsis=Specifies the maximum length of time that users have to change passwords after they have been reset by an administrator before they become locked.
property.max-password-reset-age.description=The value of this attribute is an integer followed by a unit of seconds, minutes, hours, days, or weeks. A value of 0 seconds disables this feature.
property.min-password-age.synopsis=Specifies the minimum length of time after a password change before the user is allowed to change the password again.
property.min-password-age.description=The value of this attribute is an integer followed by a unit of seconds, minutes, hours, days, or weeks. This setting can be used to prevent users from changing their passwords repeatedly over a short period of time to flush an old password from the history so that it can be re-used.
property.password-attribute.synopsis=Specifies the attribute type used to hold user passwords.
property.password-attribute.description=This attribute type must be defined in the server schema, and it must have either the user password or auth password syntax.
property.password-change-requires-current-password.synopsis=Indicates whether user password changes must use the password modify extended operation and must include the user's current password before the change is allowed.
property.password-expiration-warning-interval.synopsis=Specifies the maximum length of time before a user's password actually expires that the server begins to include warning notifications in bind responses for that user.
property.password-expiration-warning-interval.description=The value of this attribute is an integer followed by a unit of seconds, minutes, hours, days, or weeks. A value of 0 seconds disables the warning interval.
property.password-generator.synopsis=Specifies the name of the password generator that is used with the associated password policy.
property.password-generator.description=This is used in conjunction with the password modify extended operation to generate a new password for a user when none was provided in the request.
property.password-generator.syntax.aggregation.constraint-synopsis=The referenced password generator must be enabled.
property.password-history-count.synopsis=Specifies the maximum number of former passwords to maintain in the password history.
property.password-history-count.description=When choosing a new password, the proposed password is checked to ensure that it does not match the current password, nor any other password in the history list. A value of zero indicates that either no password history is to be maintained (if the password history duration has a value of zero seconds), or that there is no maximum number of passwords to maintain in the history (if the password history duration has a value greater than zero seconds).
property.password-history-duration.synopsis=Specifies the maximum length of time that passwords remain in the password history.
property.password-history-duration.description=When choosing a new password, the proposed password is checked to ensure that it does not match the current password, nor any other password in the history list. A value of zero seconds indicates that either no password history is to be maintained (if the password history count has a value of zero), or that there is no maximum duration for passwords in the history (if the password history count has a value greater than zero).
property.password-validator.synopsis=Specifies the names of the password validators that are used with the associated password storage scheme.
property.password-validator.description=The password validators are invoked when a user attempts to provide a new password, to determine whether the new password is acceptable.
property.password-validator.syntax.aggregation.constraint-synopsis=The referenced password validators must be enabled.
property.previous-last-login-time-format.synopsis=Specifies the format string(s) that might have been used with the last login time at any point in the past for users associated with the password policy.
property.previous-last-login-time-format.description=These values are used to make it possible to parse previous values, but are not used to set new values. The format strings conform to the syntax described in the API documentation for the java.text.SimpleDateFormat class.
property.previous-last-login-time-format.syntax.string.pattern.synopsis=Any valid format string that can be used with the java.text.SimpleDateFormat class.
property.require-change-by-time.synopsis=Specifies the time by which all users with the associated password policy must change their passwords.
property.require-change-by-time.description=The value is expressed in a generalized time format. If this time is equal to the current time or is in the past, then all users are required to change their passwords immediately. The behavior of the server in this mode is identical to the behavior observed when users are forced to change their passwords after an administrative reset.
property.require-change-by-time.syntax.string.pattern.synopsis=A valid timestamp in generalized time form (for example, a value of "20070409185811Z" indicates a value of April 9, 2007 at 6:58:11 pm GMT).
property.require-secure-authentication.synopsis=Indicates whether users with the associated password policy are required to authenticate in a secure manner.
property.require-secure-authentication.description=This might mean either using a secure communication channel between the client and the server, or using a SASL mechanism that does not expose the credentials.
property.require-secure-password-changes.synopsis=Indicates whether users with the associated password policy are required to change their password in a secure manner that does not expose the credentials.
property.skip-validation-for-administrators.synopsis=Indicates whether passwords set by administrators are allowed to bypass the password validation process that is required for user password changes.
property.state-update-failure-policy.synopsis=Specifies how the server deals with the inability to update password policy state information during an authentication attempt.
property.state-update-failure-policy.description=In particular, this property can be used to control whether an otherwise successful bind operation fails if a failure occurs while attempting to update password policy state information (for example, to clear a record of previous authentication failures or to update the last login time). It can also be used to control whether to reject a bind request if it is known ahead of time that it will not be possible to update the authentication failure times in the event of an unsuccessful bind attempt (for example, if the backend writability mode is disabled).
property.state-update-failure-policy.syntax.enumeration.value.ignore.synopsis=If a bind attempt would otherwise be successful, then do not reject it if a problem occurs while attempting to update the password policy state information for the user.
property.state-update-failure-policy.syntax.enumeration.value.proactive.synopsis=Proactively reject any bind attempt if it is known ahead of time that it would not be possible to update the user's password policy state information.
property.state-update-failure-policy.syntax.enumeration.value.reactive.synopsis=Even if a bind attempt would otherwise be successful, reject it if a problem occurs while attempting to update the password policy state information for the user.
