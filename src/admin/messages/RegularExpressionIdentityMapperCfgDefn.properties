user-friendly-name=Regular Expression Identity Mapper
user-friendly-plural-name=Regular Expression Identity Mappers
synopsis=The Regular Expression Identity Mapper provides a way to use a regular expression to translate the provided identifier when searching for the appropriate user entry.
description=This may be used, for example, if the provided identifier is expected to be an e-mail address or Kerberos principal, but only the username portion (the part before the "@" symbol) should be used in the mapping process. Note that a replacement will be made only if all or part of the provided ID string matches the given match pattern. If no part of the ID string matches the provided pattern, the given ID string is used without any alteration.
property.enabled.synopsis=Indicates whether the Regular Expression Identity Mapper is enabled for use.
property.java-class.synopsis=Specifies the fully-qualified name of the Java class that provides the Regular Expression Identity Mapper implementation.
property.match-attribute.synopsis=Specifies the name or OID of the attribute whose value should match the provided identifier string after it has been processed by the associated regular expression.
property.match-attribute.description=All values must refer to the name or OID of an attribute type defined in the directory server schema. If multiple attributes or OIDs are provided, at least one of those attributes must contain the provided ID string value in exactly one entry.
property.match-base-dn.synopsis=Specifies the base DN(s) that should be used when performing searches to map the provided ID string to a user entry. If multiple values are given, searches are performed below all the specified base DNs.
property.match-base-dn.default-behavior.alias.synopsis=The server searches below all public naming contexts.
property.match-pattern.synopsis=Specifies the regular expression pattern that is used to identify portions of the ID string that will be replaced.
property.match-pattern.description=Any portion of the ID string that matches this pattern is replaced in accordance with the provided replace pattern (or is removed if no replace pattern is specified). If multiple substrings within the given ID string match this pattern, all occurrences are replaced. If no part of the given ID string matches this pattern, the ID string is not altered. Exactly one match pattern value must be provided, and it must be a valid regular expression as described in the API documentation for the java.util.regex.Pattern class, including support for capturing groups.
property.match-pattern.syntax.string.pattern.synopsis=Any valid regular expression pattern which is supported by the javax.util.regex.Pattern class (see http://download.oracle.com/docs/cd/E17409_01/javase/6/docs/api/java/util/regex/Pattern.html for documentation about this class for Java SE 6).
property.replace-pattern.synopsis=Specifies the replacement pattern that should be used for substrings in the ID string that match the provided regular expression pattern.
property.replace-pattern.description=If no replacement pattern is provided, then any matching portions of the ID string will be removed (i.e., replaced with an empty string). The replacement pattern may include a string from a capturing group by using a dollar sign ($) followed by an integer value that indicates which capturing group should be used.
property.replace-pattern.default-behavior.alias.synopsis=The replace pattern will be the empty string.
property.replace-pattern.syntax.string.pattern.synopsis=Any valid replacement string that is allowed by the javax.util.regex.Matcher class.
