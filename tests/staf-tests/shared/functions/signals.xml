<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2008 Sun Microsystems, Inc.
 ! -->
<stax>

  <defaultcall function="signals" />

  <function name="signals">
    <function-prolog>
      This function contains all signal related functions
    </function-prolog>
    <function-no-args/>
    <sequence>
    
      <!-- Signal variables  -->
      <script>
        SignalRaised=''
      </script>
      
      <!-- Redefine the default signal handlers-->  
      <call function="'OverideDefaultSignals'"/>
    
    </sequence>
  
  </function>

  <function name="OverideDefaultSignals">
    <function-prolog>
      This function overides the default STAX signal handlers
    </function-prolog>
    <function-no-args/>

    <!-- STAXPythonEvaluationError signal -->
    <signalhandler signal="'STAXPythonEvaluationError'">
      <sequence>
      
        <log level="'error'"  message="1">
          ('STAXPythonEvaluationError signal raised. ' + 'Continuing job. %s' % (STAXPythonEvalMsg))
        </log>
    
        <script>
          SignalRaised='STAXPythonEvaluationError'
        </script>
        
        <message>'SignalRaised = %s' % SignalRaised</message>
          
      </sequence>
    </signalhandler>

  </function>
  
</stax>
