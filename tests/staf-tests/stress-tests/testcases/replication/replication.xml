<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2009-2010 Sun Microsystems, Inc.
 ! -->
<stax>

  <defaultcall function="main_replication"/>

  <function name="main_replication">

    <function-list-args>
      <function-required-arg name="STAXParentID"/>
    </function-list-args>   

    <sequence>

      <block name="'replication'">

        <sequence>

          <!--- Load the job environment for the test group execution -->
          <import machine="STAF_LOCAL_HOSTNAME"
                file="'%s/environment.xml' % TESTS_FUNCTIONS_DIR"/>
          <call function="'loadJobEnvironment'">
            { 'parent' : STAXParentID }
          </call>

          <script>
            CurrentTestPath['group']='replication'            
            
            timerDuration = '620m'
            
            # Time in second (minimum duration: 30 min => 1800 s)
            testsDuration   = 1800
            numberOfEntries = 10000        
          </script>
          
          <call function="'testGroup_Preamble'"/>
          
          <script>
            testList = []
            testList.append('replication_add_delete')
            testList.append('replication_search')
            testList.append('replication_modifyrdn')
            testList.append('replication_modify')
            testList.append('replication_add_mod_delete')
            testList.append('replication_add_mod_delete_search')
            
            testList.append('replication_add_search_multiple')
            testList.append('replication_add_delete_multiple')
            testList.append('replication_add_modify_multiple')
            testList.append('replication_add_del_add_del_multiple')
            testList.append('replication_modify_multiple')
            testList.append('replication_modify_modifyrdn_multiple')
            testList.append('replication_modifyrdn_multiple')
            
            testList.append('replication_modify_restart_multiple')
            
            globalAssuredReplication = None
            
            if (REPLICATION_SPLIT_SERVERS == 'true'):
              globalSplitServers = True
              globalTestExternalChangelog = False
              globalExternalChangelogMode = 'n/a'
            else:
              globalSplitServers = None
              if (REPLICATION_ECL_MODE == 'n/a'):
                globalTestExternalChangelog = False
              else:
                globalTestExternalChangelog = True
              globalExternalChangelogMode = REPLICATION_ECL_MODE
          </script>

          <message>
            '***************************************************\n\
            ****  REPLICATION EXECUTION MODES  \n\
            ****  Split Servers: %s  \n\
            ****  External Changelog Mode: %s  \n\
            ***************************************************' % \
            (globalSplitServers, globalExternalChangelogMode) 
          </message>
          <iterate var="__test" in="testList">
            <sequence>

              <import machine="STAF_LOCAL_HOSTNAME"
                      file="'%s/testcases/replication/%s.xml' %
                      (TESTS_DIR,__test)"/>

              <call function="'%s' % __test" />

            </sequence>
          </iterate>

          <call function="'testGroup_Postamble'"/>

        </sequence>

      </block>

    </sequence>

  </function>

</stax>
