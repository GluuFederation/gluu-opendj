<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2007-2009 Sun Microsystems, Inc.
 ! -->

<stax>

  <defaultcall function="main_8bit_LDAPcmds"/>

  <function name="main_8bit_LDAPcmds">

    <sequence>

      <block name="'8bit_LDAPcmds'">
      
        <sequence>
          
          <script>
            if not CurrentTestPath.has_key('i18n'):
              CurrentTestPath['group']='i18n'
            CurrentTestPath['suite']=STAXCurrentBlock
          </script>
          
          
          <!---
            #@TestSuiteName             8bit_LDAPcmds
            #@TestSuitePurpose          Test the LDAP commands used with 8-bit 
                                        characters
            #@TestSuiteGroup            i18n
            #@TestScript                i18n_8bit_LDAPcmds.xml
          -->

          <call function="'testSuite_Preamble'"/>

          
          <!--- Test Case information
          #@TestMarker          8bit_LDAPcmds
          #@TestName            i18n 8-bit: add non ascii data using ldap cmd
          #@TestPurpose         check that entries containing non ascii chars
                                can be added using ldap commands
          #@TestPreamble        
          #@TestSteps           Do a ldapmodify -a 
          #@TestPostamble
          #@TestResult          should be PASSED
          -->
          <testcase name="getTestCaseName('Add non ascii data')">
              <sequence>
                  <call function="'testCase_Preamble'"/>
                  
                  <call function="'addEntry'">
                  { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                    'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                    'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                    'extraParams'      : '-i 8859-1',
                    'entryToBeAdded'   : '%s/i18n/8-bit/base64/European.base64.ldif' % remote.data ,
                    'expectedRC'       : 0 }
                  </call>
                  
                  <call function="'testCase_Postamble'"/>
              </sequence>
          </testcase>
          
          <!--- Test Case information
          #@TestMarker          8bit_LDAPcmds
          #@TestName            i18n 8-bit: delete non ascii data using ldap cmd
          #@TestPurpose         check that entries containing non ascii chars
                                can be deleted using ldap commands
          #@TestPreamble        
          #@TestSteps           Add required data
          #@TestSteps           Do a ldapdelete
          #@TestPostamble
          #@TestResult          should be PASSED
          -->
          <testcase name="getTestCaseName('Delete non ascii data')">
              <sequence>
                  <call function="'testCase_Preamble'"/>
                  
                  <call function="'addEntry'">
                  { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                    'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                    'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                    'extraParams'      : '-i 8859-1',
                    'entryToBeAdded'   : '%s/i18n/8-bit/base64/LDAPcmds_tp1_Add.base64.ldif' % remote.data ,
                    'expectedRC'       : 0 }
                  </call>
                  
                  <call function="'ldapDeleteWithScript'">
                  { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                    'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                    'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                    'dsFilename'       : '%s/i18n/8-bit/LDAPcmds_tp1_Delete.8859-1.ldif' % remote.data ,
                    'expectedRC'       : 0 }
                  </call>
                  
                  <call function="'testCase_Postamble'"/>
              </sequence>
          </testcase>
          
          
          <!--- Test Case information
          #@TestMarker          8bit_LDAPcmds
          #@TestName            i18n 8-bit: Modify non ascii data using ldap cmd
          #@TestPurpose         check that entries containing non ascii chars
                                can be modified using ldap commands
          #@TestPreamble        
          #@TestSteps           Add required data
          #@TestSteps           Do ldapmodify operations
          #@TestPostamble
          #@TestResult          should be PASSED
          -->
          <testcase name="getTestCaseName('Modify non ascii data')">
              <sequence>
                  <call function="'testCase_Preamble'"/>
                  
                  <call function="'addEntry'">
                  { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                    'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                    'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                    'extraParams'      : '-i 8859-1',
                    'entryToBeAdded'   : '%s/i18n/8-bit/base64/LDAPcmds_tp2_Add.base64.ldif' % remote.data ,
                    'expectedRC'       : 0 }
                  </call>
                  
                  <call function="'ldapModifyWithScript'">
                  { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                    'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                    'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                    'dsFilename'       : '%s/i18n/8-bit/base64/LDAPcmds_tp2_Modify.base64.ldif' % remote.data ,
                    'expectedRC'       : 0 }
                  </call>
                  
                  <call function="'testCase_Postamble'"/>
              </sequence>
          </testcase>
          
          
          <!--- Test Case information
          #@TestMarker          8bit_LDAPcmds
          #@TestName            i18n 8-bit: Modify non ascii rdn using ldap cmd
          #@TestPurpose         check that rdn containing non ascii chars
                                can be modified
          #@TestPreamble        
          #@TestSteps           Add required data
          #@TestSteps           Do ldapmodify modrdn operations 
          #@TestPostamble
          #@TestResult          should be PASSED
          -->
          <testcase name="getTestCaseName('Modify non ascii rdn')">
              <sequence>
                  <call function="'testCase_Preamble'"/>
                  
                  <call function="'addEntry'">
                  { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                    'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                    'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                    'extraParams'      : '-i 8859-1',
                    'entryToBeAdded'   : '%s/i18n/8-bit/base64/LDAPcmds_tp3_Add.base64.ldif' % remote.data ,
                    'expectedRC'       : 0 }
                  </call>
                  
                  <call function="'ldapModifyWithScript'">
                  { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                    'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                    'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                    'dsFilename'       : '%s/i18n/8-bit/base64/LDAPcmds_tp3_Modify.base64.ldif' % remote.data ,
                    'expectedRC'       : 0 }
                  </call>
                  
                  <call function="'testCase_Postamble'"/>
              </sequence>
          </testcase>
          
          <call function="'testSuite_Postamble'"/>
  
        </sequence>
        
      </block>
                  
    </sequence>
    
  </function>

</stax>
