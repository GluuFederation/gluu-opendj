<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, exclude this CDDL HEADER in each
 ! file and exclude the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2007-2008 Sun Microsystems, Inc.
 ! -->
<stax>

  <defaultcall function="main_i18n"/>

  <function name="main_i18n">
    <function-list-args>
      <function-required-arg name="STAXParentID"/>
    </function-list-args>

    <sequence>

      <block name="'i18n'">
      
        <sequence>

          <!--- Load the job environment for the test group execution -->
          <import machine="STAF_LOCAL_HOSTNAME"
                  file="'%s/environment.xml' % TESTS_FUNCTIONS_DIR" />
          <call function="'loadJobEnvironment'">
               { 'parent' : STAXParentID }
          </call>
            
          <!--
            #@TestGroupName             i18n
            #@TestGroupPurpose          To test the i18n capability of the product.
          -->
    
          <script>
            CurrentTestPath['group']='i18n'
          </script>
      
          <call function="'testGroup_Preamble'"/>
          
          <message>
                'Setting up LANG and LC_ALL environment variables'
          </message>
              
          <call function="'GetVar'">
           {
           'location'      : STAF_REMOTE_HOSTNAME ,
           'type'          : 'system' ,
           'variable'      : 'STAF/Env/LC_ALL'
           }
          </call>                       
          <script> 
              lc_all=STAFResult 
          </script>
          
          <call function="'GetVar'">
           {
           'location'      : STAF_REMOTE_HOSTNAME ,
           'type'          : 'system' ,
           'variable'      : 'STAF/Env/LANG'
           }
          </call>                       
          <script>
              lang=STAFResult
          </script>
         
          <call function="'SetVar'">
           {
           'location'      : STAF_REMOTE_HOSTNAME ,
           'type'          : 'system' ,
           'variable'      : 'STAF/Env/LC_ALL=en_US.ISO8859-1'
           }
          </call>                
         
          <call function="'SetVar'">
           {
           'location'      : STAF_REMOTE_HOSTNAME ,
           'type'          : 'system' ,
           'variable'      : 'STAF/Env/LANG=en_US.ISO8859-1'
           }
          </call>
          
          <call function="'GetVar'">
           {
           'location'      : STAF_REMOTE_HOSTNAME ,
           'type'          : 'system' ,
           'variable'      : 'STAF/Env/LANG'
           }
          </call>
          <script>
              Newlang=STAFResult
          </script>
          
          <message>
                'LANG is now set to %s ' % Newlang
          </message>
          
          <import machine="STAF_LOCAL_HOSTNAME"
            file="'%s/testcases/i18n/i18n_setup.xml' % (TESTS_DIR)"/>
          <call function="'i18n_setup'" />
         
          <import machine="STAF_LOCAL_HOSTNAME"
            file="'%s/testcases/i18n/i18n_8bit_createbackend.xml'
            % (TESTS_DIR)"/>
          <call function="'main_8bit_createbackend'" />
          
          <import machine="STAF_LOCAL_HOSTNAME"
            file="'%s/testcases/i18n/i18n_8bit_schemaExtension.xml'
            % (TESTS_DIR)"/>
          <call function="'main_8bit_schemaExtension'" />

          <if expr="not is_windows_platform(STAF_REMOTE_HOSTNAME)">
            <sequence>
              <import machine="STAF_LOCAL_HOSTNAME"
                file="'%s/testcases/i18n/i18n_8bit_authentication.xml'
                % (TESTS_DIR)"/>
              <call function="'main_8bit_authentication'" />

              <import machine="STAF_LOCAL_HOSTNAME"
                file="'%s/testcases/i18n/i18n_8bit_dataComparison.xml'
                % (TESTS_DIR)"/>
              <call function="'main_8bit_dataComparison'" />

              <import machine="STAF_LOCAL_HOSTNAME"
                file="'%s/testcases/i18n/i18n_8bit_LDAPcmds.xml'
                % (TESTS_DIR)"/>
              <call function="'main_8bit_LDAPcmds'" />
            </sequence>
          </if>

          <import machine="STAF_LOCAL_HOSTNAME"
            file="'%s/testcases/i18n/i18n_cleanup.xml' % (TESTS_DIR)"/>
          <call function="'i18n_cleanup'" />
          
          
          <message>
                'Restoring LANG and LC_ALL environment variables'
          </message>
          
          <call function="'SetVar'">
           {
           'location'      : STAF_REMOTE_HOSTNAME ,
           'type'          : 'system' ,
           'variable'      : lc_all
           }
         </call>                
         
         <call function="'SetVar'">
           {
           'location'      : STAF_REMOTE_HOSTNAME ,
           'type'          : 'system' ,
           'variable'      : lang
           }
         </call> 
         
         
          <call function="'testGroup_Postamble'"/>
        
        </sequence>
      
      </block>
      
    </sequence>

  </function>

</stax>
