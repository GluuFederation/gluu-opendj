<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2007-2009 Sun Microsystems, Inc.
 ! -->

<stax>

  <defaultcall function="main_8bit_dataComparison"/>

  <function name="main_8bit_dataComparison">

    <sequence>

      <block name="'8bit_dataComparison'">
      
        <sequence>
          
          <script>
            if not CurrentTestPath.has_key('i18n'):
              CurrentTestPath['group']='i18n'
            CurrentTestPath['suite']=STAXCurrentBlock
          </script>
          
          <message>
            'Add the test data in the directory'
          </message>
          
          <call function="'addEntry'">
                  { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                    'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                    'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                    'extraParams'      : '-i 8859-1',
                    'entryToBeAdded'   : '%s/i18n/8-bit/base64/Data_Comparison.tp1.base64.ldif' % remote.data ,
                    'expectedRC'       : 0 }
          </call>
          
          <!---
            #@TestSuiteName             8bit_dataComparison
            #@TestSuitePurpose          Test the sorting of data based on 8-bit 
                                        characters attributes values
            #@TestSuiteGroup            i18n
            #@TestScript                i18n_8bit_dataComparison.xml
          -->

          <call function="'testSuite_Preamble'"/>

          
          <!--- Test Case information
          #@TestMarker          8bit_dataComparison
          #@TestName            Group: i18n 8-bit: sort data on the server side
          #@TestPurpose         check that a ldapsearch returned values are 
                                sorted correctly
          #@TestPurpose         when attribute filter contains non ascii character 
          #@TestPreamble        
          #@TestSteps           Do a ldapsearch, I18n_singlename attribute
                                containing non ascii characters
          #@TestSteps           Check that the returned values are sorted 
                                correctly
          #@TestPostamble
          #@TestResult          should be PASSED
          -->
          <testcase name="getTestCaseName('sort data on the server side - default ordering')">
              <sequence>
                  <call function="'testCase_Preamble'"/>
                  
                  <call function="'ldapSearchWithScript'">
                    {
                    'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                    'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                    'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                    'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                    'dsBaseDN'         : 'o=Älka Màrzella' ,
                    'dsFilter'         : 'objectclass=I18n-Person' ,
                    'dsSortOrder'      : 'I18n-singlename' ,
                    'dsEncoding'       : '8859-1' ,
                    'expectedRC'       : 'noCheck' ,
                    'outputFile'       : 'ldapsearch.out' ,
                    'outputPath'       : remote.temp
                    }            
                  </call>
                  
                  <script>
                    RefFile = '%s/i18n/8-bit/base64/Data_Comparison.Ref.base64.ldif' % remote.data
                  </script>
                  
                  <call function="'LdifDiffWithScript-new'">
                  { 
                  'sourceLdif' : RefFile ,
                  'targetLdif' : '%s/ldapsearch.out' % remote.temp ,
                  'outputLdif' : '%s/ldifsearch.diff' % remote.temp
                  }
                  </call>
                  
                  <call function="'testCase_Postamble'"/>
              </sequence>
          </testcase>
          
          <call function="'testSuite_Postamble'"/>
  
        </sequence>
        
      </block>
                  
    </sequence>
    
  </function>

</stax>
