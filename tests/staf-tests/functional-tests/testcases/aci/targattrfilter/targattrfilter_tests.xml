<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2008-2010 Sun Microsystems, Inc.
 !      Portions Copyright 2011-2013 ForgeRock AS.
 ! -->
<stax>
                      
  <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targattrfilter Tests
        #@TestName                  Preamble
        #@TestIssue                 none
        #@TestPurpose               Test default aci settings
        #@TestPreamble              none
        #@TestStep                  Client searches entry with a branch dn.
        #@TestStep                  Client searches entry with another branch dn.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    and no entries are returned 
                                    for all operations.
    -->
  <function name="aci_targattrfilter_001" scope="local">
    <testcase name="getTestCaseName('Targattrfilter Preamble')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <message>
               'ACI: Targattrfilter: Preamble - Removing Search Global ACI'
            </message>

            <call function="'modifyGlobalAci'">
              { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                'aciValue'               : GLOBAL_ACI_SEARCH ,
                'opType'                 : 'remove' }
            </call>
        
            <message>
               'ACI: Targattrfilter: Preamble - user searching entry that will be targeted in future tests'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=gfarmer,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=gfarmer,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targattrfilter: Preamble - user searching entry that will be non-targeted in future tests'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=gfarmer,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=gfarmer,ou=People,ou=non-aci branch,o=ACI Tests' }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
    
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targattrfilter Tests
      #@TestName                  Targattrfilter equals add:title 
      #@TestIssue                 none
      #@TestPurpose               Test with the targattrfilter set equal to add:title
      #@TestPreamble              Admin adds an aci with the target equal to the dn of one existing branch.
      #@TestStep                  Client adds title to an entry with the targeted branch dn.
      #@TestStep                  Client adds prohibited title to an entry with the targeted branch dn.
      #@TestStep                  Client deletes telephonenumber from an entry with the targeted branch dn.
      #@TestStep                  Client adds title to an entry that is not with the targeted branch dn.
      #@TestStep                  Remove aci.
      #@TestStep                  Client adds carlicense to an entry with the previously targeted branch dn.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 0
                                  for all ldapmodify operations, 
                                  0 for steps 1 and 3, and
                                  50 for all other steps.
  -->
  <function name="aci_targattrfilter_002" scope="local">
    <testcase name="getTestCaseName('Targattrfilter equals add:title')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <script>
                curr_aci_ldif_file = 'add_aci1.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:title, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:title, user adding title to targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/add_title1.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:title, user adding prohibited title to targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/add_title1a.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals del:telephonenumber, user deleting roomnumber from targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/del_telephonenumber1.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:title, user adding title to non-targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/add_title1b.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:title, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:title, user adding carlicense to previously targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/add_carlicense1.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
     
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targattrfilter Tests
      #@TestName                  Targattrfilter equals del:title 
      #@TestIssue                 none
      #@TestPurpose               Test with the targattrfilter set equal to del:title
      #@TestPreamble              Admin adds an aci with the target equal to the dn of one existing branch.
      #@TestStep                  Client adds telephonenumber to an entry with the targeted branch dn.
      #@TestStep                  Client deletes title from an entry with the targeted branch dn.
      #@TestStep                  Client deletes roomnumber from an entry with the targeted branch dn.
      #@TestStep                  Client deletes roomnumber from an entry that is not with the targeted branch dn.
      #@TestStep                  Remove aci.
      #@TestStep                  Client deletes fax number from an entry with the previously targeted branch dn.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 0
                                  for all ldapmodify operations, 
                                  0 for steps 1 and 3, and
                                  50 for all other steps.
  -->
  <function name="aci_targattrfilter_003" scope="local">
    <testcase name="getTestCaseName('Targattrfilter equals del:roomnumber')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci2.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter equals del:roomnumber, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals del:roomnumber, user adding telephonenumber to targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/add_telephonenumber2.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals del:roomnumber, user deleting title from targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/del_title2.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals del:roomnumber, user deleting roomnumber from targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/del_roomnumber2.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals del:roomnumber, user deleting roomnumber from non-targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/del_roomnumber2a.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals del:roomnumber, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals del:roomnumber, user deleting fax number from previously targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/del_faxnumber2.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
     
  <!---
          Place test-specific test information here.
          The tag, TestMarker, must be the same as the tag, TestSuiteName.
          #@TestMarker                ACI Targattrfilter Tests
          #@TestName                  Targattrfilter equals add:l,del:l
          #@TestIssue                 none
          #@TestPurpose               Test with the targattrfilter set equal to add:l,del:l
          #@TestPreamble              Admin adds an aci with the target equal to the dn of one existing branch.
          #@TestStep                  Client replaces l in an entry with the targeted branch dn.
          #@TestStep                  Client replaces mail in an entry with the targeted branch dn.
          #@TestStep                  Client replaces l in an entry that is not with the targeted branch dn.
          #@TestStep                  Remove aci.
          #@TestStep                  Client replaces l from an entry with the previously targeted branch dn.
          #@TestPostamble             none
          #@TestResult                Success if OpenDS returns 0
                                      for all ldapmodify operations, 
                                      0 for step 1, and
                                      50 for all other steps.
      -->
  <function name="aci_targattrfilter_004" scope="local">
    <testcase name="getTestCaseName('Targattrfilter equals add:l,del:l')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci3.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:l,del:l, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:l,del:l, user replacing l in targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_l3.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:l,del:l, user replacing mail in targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_mail3.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:l,del:l, user replacing l in non-targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_l3a.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:l,del:l, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:l,del:l, user replacing l in previously targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_l3.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
     
  <!---
          Place test-specific test information here.
          The tag, TestMarker, must be the same as the tag, TestSuiteName.
          #@TestMarker                ACI Targattrfilter Tests
          #@TestName                  Targattrfilter equals add:st,del:st - st not present
          #@TestIssue                 none
          #@TestPurpose               Test with the targattrfilter set equal to add:st,del:st - st not present
          #@TestPreamble              Admin adds an aci with the target equal to the dn of one existing branch.
          #@TestStep                  Client replaces st in an entry with the targeted branch dn.
          #@TestStep                  Client replaces mail in an entry with the targeted branch dn.
          #@TestStep                  Client replaces st in an entry that is not with the targeted branch dn.
          #@TestStep                  Remove aci.
          #@TestStep                  Client replaces st from an entry with the previously targeted branch dn.
          #@TestPostamble             none
          #@TestResult                Success if OpenDS returns 0
                                      for all ldapmodify operations, 
                                      0 for step 2, and
                                      50 for all other steps.
      -->
  <function name="aci_targattrfilter_005" scope="local">
    <testcase name="getTestCaseName('Targattrfilter equals add:st,del:st')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci4.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:st,del:st, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:st,del:st, user replacing st in targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_st4.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:st,del:st, user replacing mail in targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_mail4.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:st,del:st, user replacing st in non-targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_st4a.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:st,del:st, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:st,del:st, user replacing st in previously targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_st4.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>
    
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
     
  <!---
          Place test-specific test information here.
          The tag, TestMarker, must be the same as the tag, TestSuiteName.
          #@TestMarker                ACI Targattrfilter Tests
          #@TestName                  Targattrfilter equals add:l,del:l
          #@TestIssue                 none
          #@TestPurpose               Test with the targattrfilter set equal to add:l,del:l
          #@TestPreamble              Admin adds an aci with the target equal to the dn of one existing branch.
          #@TestStep                  Client replaces l in an entry with the targeted branch dn.
          #@TestStep                  Client replaces mail in an entry with the targeted branch dn.
          #@TestStep                  Client replaces l in an entry that is not with the targeted branch dn.
          #@TestStep                  Remove aci.
          #@TestStep                  Client replaces l from an entry with the previously targeted branch dn.
          #@TestPostamble             none
          #@TestResult                Success if OpenDS returns 0
                                      for all ldapmodify operations, 
                                      0 for steps 1 and 2, and
                                      50 for all other steps.
      -->
  <function name="aci_targattrfilter_006" scope="local">
    <testcase name="getTestCaseName('Targattrfilter equals add:l,del:l wildcard only')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci5.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:l,del:l, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:l,del:l, user replacing l in targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_l5.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:l,del:l, user replacing mail in targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_mail5.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:l,del:l, user replacing l in non-targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_l5a.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:l,del:l, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:l,del:l, user replacing l in previously targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_l5.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
     
  <!---
          Place test-specific test information here.
          The tag, TestMarker, must be the same as the tag, TestSuiteName.
          #@TestMarker                ACI Targattrfilter Tests
          #@TestName                  Targattrfilter equals add:street,del:street, street not present  
          #@TestIssue                 none
          #@TestPurpose               Test with the targattrfilter set equal to add:street,del:street
          #@TestPreamble              Admin adds an aci with the target equal to the dn of one existing branch.
          #@TestStep                  Client replaces st in an entry with the targeted branch dn.
          #@TestStep                  Client replaces mail in an entry with the targeted branch dn.
          #@TestStep                  Client replaces st in an entry that is not with the targeted branch dn.
          #@TestStep                  Remove aci.
          #@TestStep                  Client replaces st from an entry with the previously targeted branch dn.
          #@TestPostamble             none
          #@TestResult                Success if OpenDS returns 0
                                      for all ldapmodify operations, 
                                      0 for step 1, and
                                      50 for all other steps.
      -->
  <function name="aci_targattrfilter_007" scope="local">
    <testcase name="getTestCaseName('Targattrfilter equals add:street,del:street wildcard only, street not present')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci17.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:street,del:street wildcard only, street not present, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:street,del:street wildcard only, street not present, user replacing street in targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_street17.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:street,del:street wildcard only, street not present, user replacing mail in targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_mail17.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:street,del:street wildcard only, street not present, user replacing street in non-targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_street17a.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:street,del:street wildcard only, street not present, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:street,del:street wildcard only, street not present, user replacing street in previously targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_street17.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>
    
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
          
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targattrfilter Tests
      #@TestName                  Targattrfilter equals add:title,del:title - wildcards
      #@TestIssue                 none
      #@TestPurpose               Test with the targattrfilter set equal to add:title,del:title with wildcards
      #@TestPreamble              Admin adds an aci with the target equal to the dn of one existing branch.
      #@TestStep                  Client replaces st in an entry with the targeted branch dn.
      #@TestStep                  Client replaces st in an entry that is not with the targeted branch dn.
      #@TestStep                  Remove aci.
      #@TestStep                  Client replaces st from an entry with the previously targeted branch dn.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 0
                                  for all ldapmodify operations, 
                                  and
                                  50 for all other steps.
  -->
  <function name="aci_targattrfilter_008" scope="local">
    <testcase name="getTestCaseName('Targattrfilter equals add:title,del:title with wildcards')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci6.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:title,del:title with wildcards, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:title,del:title with wildcards, user replacing title in targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_title6.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:title,del:title with wildcards, user replacing title in non-targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_title6a.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:title,del:title with wildcards, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter equals add:title,del:title with wildcards, user replacing title in previously targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/replace_title6.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>
    
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
     
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targattrfilter Tests
      #@TestName                  Targattrfilter with misppelled add 
      #@TestIssue                 none
      #@TestPurpose               Test with the targattrfilter with mispelled add
      #@TestPreamble              none
      #@TestStep                  Admin adds the aci.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 21.
  -->
  <function name="aci_targattrfilter_009" scope="local">
    <testcase name="getTestCaseName('Targattrfilter with mispelled add')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci7.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter with mispelled add, adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
            }
            </call>
    
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
     
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targattrfilter Tests
      #@TestName                  Targattrfilter with misppelled del 
      #@TestIssue                 none
      #@TestPurpose               Test with the targattrfilter with mispelled del
      #@TestPreamble              none
      #@TestStep                  Admin adds the aci.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 21.
  -->
  <function name="aci_targattrfilter_010" scope="local">
    <testcase name="getTestCaseName('Targattrfilter with mispelled del')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci8.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter with mispelled del, adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
            }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
     
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targattrfilter Tests
      #@TestName                  Targattrfilter with misppelled del with add
      #@TestIssue                 none
      #@TestPurpose               Test with the targattrfilter with mispelled del
      #@TestPreamble              none
      #@TestStep                  Admin adds the aci.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 21.
  -->
  <function name="aci_targattrfilter_011" scope="local">
    <testcase name="getTestCaseName('Targattrfilter with mispelled del with add')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci9.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter with mispelled del with add, adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
              }
            </call>
    
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
     
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targattrfilter Tests
      #@TestName                  Targattrfilter with missing comma 
      #@TestIssue                 none
      #@TestPurpose               Test with the targattrfilter with missing comma
      #@TestPreamble              none
      #@TestStep                  Admin adds the aci.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 21.
  -->
  <function name="aci_targattrfilter_012" scope="local">
    <testcase name="getTestCaseName('Targattrfilter with missing comma')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci10.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter with missing comma, adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
              }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
     
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targattrfilter Tests
      #@TestName                  Targattrfilter with extra quotes 
      #@TestIssue                 none
      #@TestPurpose               Test with the targattrfilter with extra quotes
      #@TestPreamble              none
      #@TestStep                  Admin adds the aci.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 21.
  -->
  <function name="aci_targattrfilter_013" scope="local">
    <testcase name="getTestCaseName('Targattrfilter with extra quotes')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci11.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter with extra quotes, adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
            }
            </call>
    
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
     
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targattrfilter Tests
      #@TestName                  Targattrfilter with extra commas 
      #@TestIssue                 none
      #@TestPurpose               Test with the targattrfilter with extra commas
      #@TestPreamble              none
      #@TestStep                  Admin adds the aci.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 21.
  -->
  <function name="aci_targattrfilter_014" scope="local">
    <testcase name="getTestCaseName('Targattrfilter with extra commas')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci12.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter with extra commas, adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
              }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
     
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targattrfilter Tests
      #@TestName                  Targattrfilter with missing argument for add 
      #@TestIssue                 none
      #@TestPurpose               Test with the targattrfilter with missing argument for add 
      #@TestPreamble              none
      #@TestStep                  Admin adds the aci.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 21.
  -->
  <function name="aci_targattrfilter_015" scope="local">
    <testcase name="getTestCaseName('Targattrfilter with missing argument for add')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci13.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter with missing argument for add, adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
            }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
     
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targattrfilter Tests
      #@TestName                  Targattrfilter with missing argument for del 
      #@TestIssue                 none
      #@TestPurpose               Test with the targattrfilter with missing argument for del 
      #@TestPreamble              none
      #@TestStep                  Admin adds the aci.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 21.
  -->
  <function name="aci_targattrfilter_016" scope="local">
    <testcase name="getTestCaseName('Targattrfilter with missing argument for del')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci14.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter with missing argument for del, adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
            }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
     
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targattrfilter Tests
      #@TestName                  Targattrfilter with missing argument for del with add
      #@TestIssue                 none
      #@TestPurpose               Test with the targattrfilter with missing argument for del with add
      #@TestPreamble              none
      #@TestStep                  Admin adds the aci.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 21.
  -->
  <function name="aci_targattrfilter_017" scope="local">
    <testcase name="getTestCaseName('Targattrfilter with missing argument for del with add')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci15.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter with missing argument for del with add, adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
            }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
     
  <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targattrfilter Tests
        #@TestName                  Targattrfilter equals del:l,add:l
        #@TestIssue                 none
        #@TestPurpose               Test with the targattrfilter set equal to del:l,add:l
        #@TestPreamble              none
        #@TestStep                  Admin adds the aci.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 21.
    -->
  <function name="aci_targattrfilter_018" scope="local">
    <testcase name="getTestCaseName('Targattrfilter equals del:l,add:l')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci16.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter equals del:l,add:l, preamble adding aci,\n %s' % curr_aci
            </message>
  
            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
            }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>

  <!--
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targattrfilter Tests
        #@TestName                  Targattrfilter with very long comment portion 
        #@TestIssue                 none
        #@TestPurpose               Test with the targattrfilter with very long comment portion 
        #@TestPreamble              Admin adds an aci with the target equal to the dn of one existing branch.
        #@TestStep                  Client adds title to an entry with the targeted branch dn.
        #@TestStep                  Client adds prohibited title to an entry with the targeted branch dn.
        #@TestStep                  Client deletes telephonenumber from an entry with the targeted branch dn.
        #@TestStep                  Client adds title to an entry that is not with the targeted branch dn.
        #@TestStep                  Remove aci.
        #@TestStep                  Client adds carlicense to an entry with the previously targeted branch dn.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    for all ldapmodify operations, 
                                    0 for steps 1 and 3, and
                                    50 for all other steps.
    -->
  <function name="aci_targattrfilter_019" scope="local">
    <testcase name="getTestCaseName('Targattrfilter with very long comment portion')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci18.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targattrfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targattrfilter: Targattrfilter with very long comment portion, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter with very long comment portion, user adding title to targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/add_title18.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter with very long comment portion, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targattrfilter: Targattrfilter with very long comment portion, user adding carlicense to previously targeted entry'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'entryToBeModified'   : '%s/aci/aci_targattrfilter/add_carlicense18.ldif' % remote.data ,
                'expectedRC'          : 50
            }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
     
  <!---
    Place test-specific test information here.
    The tag, TestMarker, must be the same as the tag, TestSuiteName.
    #@TestMarker                ACI Targattrfilter Tests
    #@TestName                  Postamble
    #@TestIssue                 none
    #@TestPurpose               Test default aci settings
    #@TestPreamble              none
    #@TestStep                  Client searches entry with a branch dn.
    #@TestStep                  Client searches entry with another branch dn.
    #@TestPostamble             none
    #@TestResult                Success if OpenDS returns 0
                                and no entries are returned 
                                for all operations.
  -->
  <function name="aci_targattrfilter_020" scope="local">
    <testcase name="getTestCaseName('Targattrfilter Postamble')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <message>
               'ACI: Targattrfilter: Postamble - user searching entry that will be targeted in future tests'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=gfarmer,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=gfarmer,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targattrfilter: Postamble - user searching entry that will be non-targeted in future tests'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=gfarmer,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
              { 'returnString'       : returnString ,
                'testString'         : 'dn: uid=gfarmer,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
          
            <message>
               'ACI: Targattrfilter: Resetting Search Global ACI'
            </message>

            <call function="'modifyGlobalAci'">
              { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                'aciValue'               : GLOBAL_ACI_SEARCH ,
                'opType'                 : 'add' }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>

</stax>
