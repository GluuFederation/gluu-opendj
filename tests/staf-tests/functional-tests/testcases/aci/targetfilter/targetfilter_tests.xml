<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying * information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2008-2010 Sun Microsystems, Inc.
 !      Portions Copyright 2011-2013 ForgeRock AS
 ! -->
<stax>
                        
  <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Preamble
        #@TestIssue                 none
        #@TestPurpose               Test default aci settings
        #@TestPreamble              none
        #@TestStep                  Client searches entry in a branch.
        #@TestStep                  Client searches entry in another branch.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    and no entries are returned 
                                    for all operations.
    -->
  <function name="aci_targetfilter_001" scope="local">
    <testcase name="getTestCaseName('TargeFilter Preamble')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <message>
               'ACI: Targetfilter: Preamble - Removing Search Global ACI'
            </message>

            <call function="'modifyGlobalAci'">
              { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                'aciValue'               : GLOBAL_ACI_SEARCH ,
                'opType'                 : 'remove' }
            </call>
        
            <message>
               'ACI: Targetfilter: Preamble - user searching entry that will be targeted in future tests'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber telephonenumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Preamble - user searching entry that will be non-targeted in future tests'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber telephonenumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests' }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
    
  <!--
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter with one statement
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with one statement
        #@TestPreamble              Admin adds an aci with the targetfilter containing one statement.
        #@TestStep                  Client searches entry which should be allowed with the targetfilter.
        #@TestStep                  Client searches entry which should not be allowed with the targetfilter.
        #@TestStep                  Client searches entry which is outside of the scope of the aci.
        #@TestStep                  Remove aci.
        #@TestStep                  Client searches entry which was previously allowed with the targetfilter.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    for all ldap operations. 
                                    Entry is returned only for step 1 
                                    and only with the appropriate attributes.
    -->
  <function name="aci_targetfilter_002" scope="local">
    <testcase name="getTestCaseName('Targetfilter Equals One Statement')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci1.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targetfilter: Targetfilter Equals One Statement, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals One Statement, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'      : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'roomnumber:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'cn:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'telephonenumber:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals One Statement, user searching non-targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=scarter,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=scarter,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals One Statement, user searching non-targeted entry outside of the scope of the aci'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals One Statement, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'    : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'    : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'      : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'    : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified' : '%s/aci/aci_targetfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals One Statement, user searching previously targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
    
          
 <!--
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter with one statement 2
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with one statement
        #@TestPreamble              Admin adds an aci with the targetfilter containing one statement.
        #@TestStep                  Client searches entry which should be allowed with the targetfilter.
        #@TestStep                  Client searches entry which should not be allowed with the targetfilter.
        #@TestStep                  Client searches entry which is outside of the scope of the aci.
        #@TestStep                  Remove aci.
        #@TestStep                  Client searches entry which was previously allowed with the targetfilter.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    for all ldap operations. 
                                    Entry is returned only for step 1 
                                    but with no attributes.
    -->
  <function name="aci_targetfilter_003" scope="local">
    <testcase name="getTestCaseName('Targetfilter Equals One Statement 2')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci1.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Targetfilter: Targetfilter Equals One Statement 2, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals One Statement 2, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'roomnumber:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'cn:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'telephonenumber:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals One Statement, user searching non-targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=scarter,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=scarter,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals One Statement 2, user searching non-targeted entry outside of the scope of the aci'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals One Statement 2, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'    : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'    : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'      : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'    : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified' : '%s/aci/aci_targetfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals One Statement 2, user searching previously targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
    
 <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter with one statement 3
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with one statement
        #@TestPreamble              Admin adds an aci with the targetfilter containing one statement.
        #@TestStep                  Client searches entry which should be allowed with the targetfilter.
        #@TestStep                  Client searches entry which is outside of the scope of the aci.
        #@TestStep                  Remove aci.
        #@TestStep                  Client searches entry which was previously allowed with the targetfilter.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    for all ldap operations. 
                                    Entry is returned only for step 1 
                                    and only with the appropriate attributes.
    -->
  <function name="aci_targetfilter_004" scope="local">
    <testcase name="getTestCaseName('Targetfilter Equals One Statement 3')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
              <script>
                  curr_aci_ldif_file = 'add_aci1.ldif'
                  curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
              </script>
      
              <message>
                 'ACI: Targetfilter: Targetfilter Equals One Statement 3, preamble adding aci,\n %s' % curr_aci
              </message>
  
              <call function="'modifyEntry'">
                { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                  'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                  'entryToBeModified'   : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) }
              </call>
  
              <message>
                 'ACI: Targetfilter: Targetfilter Equals One Statement 3, user searching targeted entry'
              </message>
  
              <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                  'dsInstancePswd'   : 'ACIRules' ,
                  'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  }
              </call>
  
              <script> 
               returnString = STAXResult[0][1]
              </script> 
  
              <call function="'searchStringForSubstring'">
                  { 'returnString'       : returnString ,
                    'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' ,
                    'expectedResult'     : '1' }
              </call>
              
              <call function="'searchStringForSubstring'">
                  { 'returnString'       : returnString ,
                    'testString'         : 'roomNumber:' ,
                    'expectedResult'     : '1' }
              </call>
              
              <call function="'searchStringForSubstring'">
                  { 'returnString'       : returnString ,
                    'testString'         : 'cn:' ,
                    'expectedResult'     : '1' }
              </call>
              
              <call function="'searchStringForSubstring'">
                  { 'returnString'       : returnString ,
                    'testString'         : 'telephoneNumber:' ,
                    'expectedResult'     : '1' }
              </call>
              
              <message>
                 'ACI: Targetfilter: Targetfilter Equals One Statement 3, user searching non-targeted entry outside of the scope of the aci'
              </message>
  
              <call function="'SearchObject'">
                { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                  'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                  'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                  'dsInstancePswd'   : 'ACIRules' ,
                  'dsBaseDN'         : 'uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                  'dsFilter'         : 'objectclass=*'  }
              </call>
  
              <script> 
               returnString = STAXResult[0][1]
              </script> 
  
              <call function="'searchStringForSubstring'">
                  { 'returnString'       : returnString ,
                    'testString'         : 'dn: uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests' ,
                    'expectedResult'     : '0' }
              </call>
              
              <message>
                 'ACI: Targetfilter: Targetfilter Equals One Statement 3, admin deleting aci'
              </message>
  
              <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals One Statement 3, user searching previously targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
        
 <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter set to negative of one statement
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with (not equals) one statement
        #@TestPreamble              Admin adds an aci with the targetfilter containing a negative of one statement.
        #@TestStep                  Client searches entry which should not be allowed with the targetfilter.
        #@TestStep                  Client searches entry which should be allowed with the targetfilter.
        #@TestStep                  Client searches entry which is outside of the scope of the aci.
        #@TestStep                  Remove aci.
        #@TestStep                  Client searches entry which was previously allowed with the targetfilter.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    for all ldap operations. 
                                    Entry is returned only for step 2 
                                    and only with the appropriate attributes.
    -->
  <function name="aci_targetfilter_005" scope="local">
    <testcase name="getTestCaseName('Targetfilter Not Equals One Statement')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                  curr_aci_ldif_file = 'add_aci2.ldif'
                  curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetfilter: Targetfilter Not Equals One Statement, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Not Equals One Statement, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Not Equals One Statement, user searching non-targeted entry in ACI branch'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=scarter,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=scarter,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'roomnumber:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'cn:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'telephonenumber:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Not Equals One Statement, user searching non-targeted entry outside of the scope of the aci'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Not Equals One Statement, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Not Equals One Statement, user searching previously non-targeted entry in ACI branch'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=scarter,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=scarter,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
        
 <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter with three statements with or, one statement true
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with three statements with or and one statement is true
        #@TestPreamble              Admin adds an aci with the targetfilter containing three statements with or.
        #@TestStep                  Client searches entry which should be allowed with the targetfilter.
        #@TestStep                  Client searches entry which should not be allowed with the targetfilter.
        #@TestStep                  Client searches entry which is outside of the scope of the aci.
        #@TestStep                  Remove aci.
        #@TestStep                  Client searches entry which was previously allowed with the targetfilter.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    for all ldap operations. 
                                    Entry is returned only for step 1 
                                    and only with the appropriate attributes.
    -->
  <function name="aci_targetfilter_006" scope="local">
    <testcase name="getTestCaseName('Targetfilter Equals Three Statements With or, one true')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                  curr_aci_ldif_file = 'add_aci3.ldif'
                  curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With or, one true, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With or, one true, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'roomnumber:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'cn:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'telephonenumber:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With or, one true, user searching non-targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=scarter,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=scarter,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With or, one true, user searching non-targeted entry outside of the scope of the aci'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With or, one true, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With or, one true, user searching previously targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
        
  <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter (not equals) with three statements with or, one statement true
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with not equals three statements with or and one statement is true
        #@TestPreamble              Admin adds an aci with the targetfilter containing three statements with or.
        #@TestStep                  Client searches entry which should be allowed with the targetfilter.
        #@TestStep                  Client searches entry which should not be allowed with the targetfilter.
        #@TestStep                  Client searches entry which is outside of the scope of the aci.
        #@TestStep                  Remove aci.
        #@TestStep                  Client searches entry which was previously allowed with the targetfilter.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    for all ldap operations. 
                                    Entry is returned only for step 2 
                                    and only with the appropriate attributes.
    -->
  <function name="aci_targetfilter_007" scope="local">
    <testcase name="getTestCaseName('Targetfilter Not Equals Three Statements With or, one true')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                  curr_aci_ldif_file = 'add_aci3a.ldif'
                  curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetfilter: Targetfilter Not Equals Three Statements With or, one true, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Not Equals Three Statements With or, one true, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Not Equals Three Statements With or, one true, user searching non-targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=scarter,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=scarter,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'roomnumber:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'cn:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'telephonenumber:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Not Equals Three Statements With or, one true, user searching non-targeted entry outside of the scope of the aci'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Not Equals Three Statements With or, one true, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Not Equals Three Statements With or, one true, user searching previously targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=scarter,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=scarter,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
        
 <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter with three statements with or, no statement true 
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with three statements with or and no statement is true
        #@TestPreamble              Admin adds an aci with the targetfilter containing three statements with or.
        #@TestStep                  Client searches entry which should not be allowed with the targetfilter.
        #@TestStep                  Client searches entry which is outside of the scope of the aci.
        #@TestStep                  Remove aci.
        #@TestStep                  Client searches entry which was previously allowed with the targetfilter.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    for all ldap operations. 
                                    No entries are returned in any steps.
    -->
  <function name="aci_targetfilter_008" scope="local">
    <testcase name="getTestCaseName('Targetfilter Equals Three Statements With or, none true')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <script>
                  curr_aci_ldif_file = 'add_aci4.ldif'
                  curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With or, none true, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With or, none true, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'      : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With or, none true, user searching non-targeted entry outside of the scope of the aci'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With or, none true, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With or, none true, user searching previously targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'      : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
        
        
 <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter with three statements with and, one statement true
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with three statements with and and one statement is true
        #@TestPreamble              Admin adds an aci with the targetfilter containing three statements with and.
        #@TestStep                  Client searches entry which should not be allowed with the targetfilter.
        #@TestStep                  Client searches entry which is outside of the scope of the aci.
        #@TestStep                  Remove aci.
        #@TestStep                  Client searches entry which was previously allowed with the targetfilter.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    for all ldap operations. 
                                    No entries are returned in any steps.
    -->
  <function name="aci_targetfilter_009" scope="local">
    <testcase name="getTestCaseName('Targetfilter Equals Three Statements With and, one true')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                  curr_aci_ldif_file = 'add_aci5.ldif'
                  curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With and, one true, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With and, one true, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With and, one true, user searching non-targeted entry outside of the scope of the aci'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With and, one true, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With and, one true, user searching previously targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
        
 <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter with three statements with and, all statements true 
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with three statements with and and all statements are true
        #@TestPreamble              Admin adds an aci with the targetfilter containing three statements with and.
        #@TestStep                  Client searches entry which should be allowed with the targetfilter.
        #@TestStep                  Client searches entry which should not be allowed with the targetfilter.
        #@TestStep                  Client searches entry which is outside of the scope of the aci.
        #@TestStep                  Remove aci.
        #@TestStep                  Client searches entry which was previously allowed with the targetfilter.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    for all ldap operations. 
                                    Entry is returned only for step 1 
                                    and only with the appropriate attributes.
    -->
  <function name="aci_targetfilter_010" scope="local">
    <testcase name="getTestCaseName('Targetfilter Equals Three Statements With and, all true')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                  curr_aci_ldif_file = 'add_aci6.ldif'
                  curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With and, all true, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With and, all true, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'roomnumber:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'cn:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'telephonenumber:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With and, all true, user searching non-targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=scarter,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=scarter,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With and, all true, user searching non-targeted entry outside of the scope of the aci'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With and, all true, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With and, all true, user searching previously targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
        
 <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter (not equals) with three statements with and, all statements true 
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with not equals three statements with and and all statements are true
        #@TestPreamble              Admin adds an aci with the targetfilter containing three statements with and.
        #@TestStep                  Client searches entry which should be allowed with the targetfilter.
        #@TestStep                  Client searches entry which should not be allowed with the targetfilter.
        #@TestStep                  Client searches entry which is outside of the scope of the aci.
        #@TestStep                  Remove aci.
        #@TestStep                  Client searches entry which was previously allowed with the targetfilter.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    for all ldap operations. 
                                    Entry is returned only for step 2 
                                    and only with the appropriate attributes.
    -->
  <function name="aci_targetfilter_011" scope="local">
    <testcase name="getTestCaseName('Targetfilter Not Equals Three Statements With and, all true')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                  curr_aci_ldif_file = 'add_aci6a.ldif'
                  curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetfilter: Targetfilter Not Equals Three Statements With and, all true, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Not Equals Three Statements With and, all true, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Not Equals Three Statements With and, all true, user searching non-targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=scarter,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=scarter,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'roomnumber:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'cn:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'telephonenumber:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Not Equals Three Statements With and, all true, user searching non-targeted entry outside of the scope of the aci'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Not Equals Three Statements With and, all true, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Not Equals Three Statements With and, all true, user searching previously targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=scarter,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=scarter,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
        
  <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter with three statements with wildcard and or, one statement true
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with three statements with wildcard and or and one statement is true
        #@TestPreamble              Admin adds an aci with the targetfilter containing three statements with wildcard and or.
        #@TestStep                  Client searches entry which should be allowed with the targetfilter.
        #@TestStep                  Client searches entry which should not be allowed with the targetfilter.
        #@TestStep                  Client searches entry which is outside of the scope of the aci.
        #@TestStep                  Remove aci.
        #@TestStep                  Client searches entry which was previously allowed with the targetfilter.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    for all ldap operations. 
                                    Entry is returned only for step 1 
                                    and only with the appropriate attributes.
    -->
  <function name="aci_targetfilter_012" scope="local">
    <testcase name="getTestCaseName('Targetfilter Equals Three Statements With Wildcard and or, one true')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                  curr_aci_ldif_file = 'add_aci10.ldif'
                  curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Wildcard and or, one true, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Wildcard and or, one true, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'roomnumber:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'cn:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'telephonenumber:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Wildcard and or, one true, user searching non-targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=scarter,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=scarter,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Wildcard and or, one true, user searching non-targeted entry outside of the scope of the aci'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Wildcard and or, one true, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Wildcard and or, one true, user searching previously targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
        
 <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter with three statements with two wildcards and or, one statement true
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with three statements with two wildcards and or and one statement is true
        #@TestPreamble              Admin adds an aci with the targetfilter containing three statements with wildcard and or.
        #@TestStep                  Client searches entry which should be allowed with the targetfilter.
        #@TestStep                  Client searches entry which should not be allowed with the targetfilter.
        #@TestStep                  Client searches entry which is outside of the scope of the aci.
        #@TestStep                  Remove aci.
        #@TestStep                  Client searches entry which was previously allowed with the targetfilter.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    for all ldap operations. 
                                    Entry is returned only for step 1 
                                    and only with the appropriate attributes.
    -->
  <function name="aci_targetfilter_013" scope="local">
    <testcase name="getTestCaseName('Targetfilter Equals Three Statements With Two Wildcards and or, one true')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                  curr_aci_ldif_file = 'add_aci11.ldif'
                  curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Two Wildcards and or, one true, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Two Wildcards and or, one true, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'roomnumber:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'cn:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'telephonenumber:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Two Wildcards and or, one true, user searching non-targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=scarter,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=scarter,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Two Wildcards and or, one true, user searching non-targeted entry outside of the scope of the aci'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Two Wildcards and or, one true, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Two Wildcards and or, one true, user searching previously targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
        
  <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter with three statements with wildcard and and, all statements true
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with three statements with wildcard with and and all statements true
        #@TestPreamble              Admin adds an aci with the targetfilter containing three statements with wildcard with and.
        #@TestStep                  Client searches entry which should be allowed with the targetfilter.
        #@TestStep                  Client searches entry which should not be allowed with the targetfilter.
        #@TestStep                  Client searches entry which is outside of the scope of the aci.
        #@TestStep                  Remove aci.
        #@TestStep                  Client searches entry which was previously allowed with the targetfilter.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    for all ldap operations. 
                                    Entry is returned only for step 1 
                                    and only with the appropriate attributes.
    -->
  <function name="aci_targetfilter_014" scope="local">
    <testcase name="getTestCaseName('Targetfilter Equals Three Statements With Wildcard With and, all true')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                  curr_aci_ldif_file = 'add_aci12.ldif'
                  curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Wildcard With and, all true, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Wildcard With and, all true, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'roomnumber:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'cn:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'telephonenumber:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Wildcard With and, all true, user searching non-targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=scarter,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=scarter,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Wildcard With and, all true, user searching non-targeted entry outside of the scope of the aci'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Wildcard With and, all true, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Wildcard With and, all true, user searching previously targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
        
  <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter with three statements with three wildcards and and, all statements true
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with three statements with three wildcards with and and all statements true
        #@TestPreamble              Admin adds an aci with the targetfilter containing three statements with three wildcards with and.
        #@TestStep                  Client searches entry which should be allowed with the targetfilter.
        #@TestStep                  Client searches entry which should not be allowed with the targetfilter.
        #@TestStep                  Client searches entry which is outside of the scope of the aci.
        #@TestStep                  Remove aci.
        #@TestStep                  Client searches entry which was previously allowed with the targetfilter.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    for all ldap operations. 
                                    Entry is returned only for step 1 
                                    and only with the appropriate attributes.
    -->
  <function name="aci_targetfilter_015" scope="local">
    <testcase name="getTestCaseName('Targetfilter Equals Three Statements With Three Wildcards With and, all true')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                  curr_aci_ldif_file = 'add_aci13.ldif'
                  curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Three Wildcards With and, all true, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Three Wildcards With and, all true, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'roomnumber:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'cn:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'telephonenumber:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Three Wildcards With and, all true, user searching non-targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=scarter,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=scarter,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Three Wildcards With and, all true, user searching non-targeted entry outside of the scope of the aci'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Three Wildcards With and, all true, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter Equals Three Statements With Three Wildcards With and, all true, user searching previously targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>

  <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter with extra spaces 
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with extra spaces
        #@TestPreamble              Admin adds an aci with the targetfilter containing extra spaces.
        #@TestStep                  Client searches entry which should not be allowed with the targetfilter.
        #@TestStep                  Remove aci.
        #@TestStep                  Client searches entry which was previously not allowed with the targetfilter.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    for all ldap operations. 
                                    No entries are returned for any steps.
    -->
  <function name="aci_targetfilter_016" scope="local">
    <testcase name="getTestCaseName('Targetfilter With Extra Spaces')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                  curr_aci_ldif_file = 'add_aci7.ldif'
                  curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetfilter: Targetfilter With Extra Spaces, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter With Extra Spaces, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Targetfilter With Extra Spaces, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'        : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'        : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'          : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'        : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'     : '%s/aci/aci_targetfilter/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter With Extra Spaces, user searching previously targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
        
 <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter with missing quotes
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with missing quotes
        #@TestPreamble              none
        #@TestStep                  Admin adds an aci with the targetfilter with missing quotes.
        #@TestStep                  Client searches entry which should not be allowed.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 21
                                    and the aci was not addded.
    -->
  <function name="aci_targetfilter_017" scope="local">
    <testcase name="getTestCaseName('Targetfilter With Missing Quotes')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                  curr_aci_ldif_file = 'add_aci8.ldif'
                  curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetfilter: Targetfilter With Missing Quotes, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
              }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter With Missing Quotes, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'      : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
   
 <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter with misplaced quotes
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with misplaced quotes
        #@TestPreamble              none
        #@TestStep                  Admin adds an aci with the targetfilter with misplaced quotes.
        #@TestStep                  Client searches entry which should not be allowed.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 21
                                    and the aci was not addded.
    -->
  <function name="aci_targetfilter_018" scope="local">
    <testcase name="getTestCaseName('Targetfilter With Missing Quotes 2')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                  curr_aci_ldif_file = 'add_aci9.ldif'
                  curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetfilter: Targetfilter With Missing Quotes 2, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
              }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter With Missing Quotes 2, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'      : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
  
 <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter with Improperly Formatted Filter with or
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with improperly formatted filter with or
        #@TestPreamble              none
        #@TestStep                  Admin adds an aci with the targetfilter with misplaced quotes.
        #@TestStep                  Client searches entry which should not be allowed.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 21
                                    and the aci was not addded.
    -->
  <function name="aci_targetfilter_019" scope="local">
    <testcase name="getTestCaseName('Targetfilter With Improperly Formatted Filter with or')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                  curr_aci_ldif_file = 'add_aci14.ldif'
                  curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetfilter: Targetfilter With Improperly Formatted Filter with or, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
              }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter With Improperly Formatted Filter with or, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'      : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
  
 <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetfilter Tests 
        #@TestName                  Targetfilter with Improperly Formatted Filter with and
        #@TestIssue                 none
        #@TestPurpose               Test with a targetfilter with improperly formatted filter with and
        #@TestPreamble              none
        #@TestStep                  Admin adds an aci with the targetfilter with misplaced quotes.
        #@TestStep                  Client searches entry which should not be allowed.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 21
                                    and the aci was not addded.
    -->
  <function name="aci_targetfilter_020" scope="local">
    <testcase name="getTestCaseName('Targetfilter With Improperly Formatted Filter with and')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                  curr_aci_ldif_file = 'add_aci15.ldif'
                  curr_aci=retrieve_aci('%s/aci/aci_targetfilter/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetfilter: Targetfilter With Improperly Formatted Filter with and, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetfilter/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
              }
            </call>

            <message>
               'ACI: Targetfilter: Targetfilter With Improperly Formatted Filter with and, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'      : 'cn sn uid roomnumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
  
   <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targetfilter Tests 
      #@TestName                  Postamble
      #@TestIssue                 none
      #@TestPurpose               Test default aci settings
      #@TestPreamble              none
      #@TestStep                  Client searches entry in one branch.
      #@TestStep                  Client searches entry in another branch.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 0
                                  and no entries are returned 
                                  for all operations.
  -->
  <function name="aci_targetfilter_021" scope="local">
    <testcase name="getTestCaseName('TargeFilter Postamble')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <message>
               'ACI: Targetfilter: Postamble - user searching entry that was targeted'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber telephonenumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetfilter: Postamble - user searching entry that was non-targeted'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid roomnumber telephonenumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=dmiller,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
                 'ACI: Targetfilter: Postamble - Resetting Search Global ACI'
            </message>
  
            <call function="'modifyGlobalAci'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                  'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                  'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                  'aciValue'               : GLOBAL_ACI_SEARCH ,
                  'opType'                 : 'add' }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>

</stax>
