<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying * information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2008-2010 Sun Microsystems, Inc.
 !      Portions Copyright 2011-2013 ForgeRock AS.
 ! -->
<stax>
              
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targetattr Tests
      #@TestName                  Preamble
      #@TestIssue                 none
      #@TestPurpose               Test default aci settings
      #@TestPreamble              none
      #@TestStep                  Client searches entry for an attribute in a branch dn.
      #@TestStep                  Client searches entry for an attribute in another branch dn.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 0
                                  and no entries are returned 
                                  for all operations.
  -->
  <function name="aci_targetattr_001" scope="local">
    <testcase name="getTestCaseName('TargetAttr Preamble')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <message>
                 'ACI: Targetattr: Preamble - Removing Search Global ACI'
            </message>
  
            <call function="'modifyGlobalAci'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                  'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                  'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                  'aciValue'               : GLOBAL_ACI_SEARCH ,
                  'opType'                 : 'remove' }
            </call>
          
            <message>
               'ACI: Targetattr: Preamble - existing branch, user searching entry that will be targeted in future tests'
            </message>
  
            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'attributes'       : 'cn sn uid telephonenumber'}
            </call>
  
            <script> 
             returnString = STAXResult[0][1]
            </script> 
  
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetattr: Preamble - existing branch, user searching entry that will be non-targeted in future tests'
            </message>
  
            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'attributes'       : 'cn sn uid telephonenumber'}
            </call>
  
            <script> 
             returnString = STAXResult[0][1]
            </script> 
  
            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=non-aci branch,o=ACI Tests' }
            </call>
          
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
  
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targetattr Tests
      #@TestName                  Targetattr equals one attribute
      #@TestIssue                 none
      #@TestPurpose               Test with the targetattr set equal to a specific attribute
      #@TestPreamble              Admin adds an aci to one branch with the targetattr equal to a specific attribute.
      #@TestStep                  Client searches entry with the targeted dn for the targetattr.
      #@TestStep                  Client searches entry that does not have the targeted dn for the targetattr.
      #@TestStep                  Remove aci.
      #@TestStep                  Client searches entry with the previously targeted dn for the targetattr.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 0
                                  for all ldap operations. 
                                  Entry is returned only for step 1 
                                  and only with the specified attribute.
  -->
  <function name="aci_targetattr_002" scope="local">
    <testcase name="getTestCaseName('Targetattr Equals One Attribute')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <script>
                curr_aci_ldif_file = 'add_aci1.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targetattr/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetattr: Targetattr Equals One Attribute, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetattr: Targetattr Equals One Attribute, user searching targeted entry and targeted attribute'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'cn:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'telephonenumber:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetattr: Targetattr Equals One Attribute, user searching non-targeted entry but with targeted attribute'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetattr: Targetattr Equals One Attribute, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetattr: Targetattr Equals One Attribute, user searching previously targeted entry and targeted attribute'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
  
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targetattr Tests
      #@TestName                  Targetattr not equals one attribute
      #@TestIssue                 none
      #@TestPurpose               Test with the targetattr set to not equal (!=) a specific attribute
      #@TestPreamble              Admin adds an aci to one branch with the targetattr not equal to a specific attribute.
      #@TestStep                  Client searches entry with the targeted dn for the targetattr.
      #@TestStep                  Client searches entry that does not have the targeted dn for the targetattr.
      #@TestStep                  Remove aci.
      #@TestStep                  Client searches entry with the previously targeted dn for the targetattr.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 0
                                  for all ldap operations. 
                                  Entry is returned only for step 1 
                                  with all the attributes except the specified attribute.
  -->
  <function name="aci_targetattr_003" scope="local">
    <testcase name="getTestCaseName('Targetattr Not Equals One Attribute')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <script>
                curr_aci_ldif_file = 'add_aci2.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targetattr/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetattr: Targetattr Not Equals One Attribute, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetattr: Targetattr Not Equals One Attribute, user searching targeted entry and targeted attribute'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'telephonenumber=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'cn:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'telephonenumber:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <message>
               'ACI: Targetattr: Targetattr Not Equals One Attribute, user searching non-targeted entry but with targeted attribute'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'telephonenumber=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetattr: Targetattr Not Equals One Attribute, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetattr: Targetattr Not Equals One Attribute, user searching previously targeted entry and targeted attribute'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'telephonenumber=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
        
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targetattr Tests
      #@TestName                  Targetattr equals three attributes
      #@TestIssue                 none
      #@TestPurpose               Test with the targetattr set equal to three specific attributes
      #@TestPreamble              Admin adds an aci with the targetattr equal to three specific attributes in one branch.
      #@TestStep                  Client searches entry with the targeted dn for the targetattrs.
      #@TestStep                  Client searches entry that does not have the targeted dn for the targetattrs.
      #@TestStep                  Remove aci.
      #@TestStep                  Client searches entry with the previously targeted dn for the targetattr.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 0
                                  for all ldap operations. 
                                  Entry is returned only for step 1 
                                  and only with the three specified attributes.
  -->
  <function name="aci_targetattr_004" scope="local">
    <testcase name="getTestCaseName('Targetattr Equals Three Attributes')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <script>
                curr_aci_ldif_file = 'add_aci3.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targetattr/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetattr: Targetattr Equals Three Attributes, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetattr: Targetattr Equals Three Attributes, user searching targeted entry and targeted attributes'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'cn:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'sn:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'uid:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'telephoneNumber:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetattr: Targetattr Equals Three Attributes, user searching non-targeted entry but with targeted attributes'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetattr: Targetattr Equals Three Attributes, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetattr: Targetattr Equals Three Attributes, user searching previously targeted entry and targeted attributes'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
        
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targetattr Tests
      #@TestName                  Targetattr not equals three attributes
      #@TestIssue                 none
      #@TestPurpose               Test with the targetattr set to not equal (!=) to three specific attributes
      #@TestPreamble              Admin adds an aci with the targetattr not equal (!=) to three specific attributes in one branch.
      #@TestStep                  Client searches entry with the targeted dn for the targetattr.
      #@TestStep                  Client searches entry that does not have the targeted dn for the targetattr.
      #@TestStep                  Remove aci.
      #@TestStep                  Client searches entry with the previously targeted dn for the targetattr.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 0
                                  for all ldap operations. 
                                  Entry is returned only for step 1 
                                  with all the attributes except the specified attributes.
  -->
  <function name="aci_targetattr_005" scope="local">
    <testcase name="getTestCaseName('Targetattr Not Equals Three Attributes')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <script>
                curr_aci_ldif_file = 'add_aci4.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targetattr/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetattr: Targetattr Not Equals Three Attributes, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetattr: Targetattr Not Equals Three Attributes, user searching targeted entry and targeted attributes'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'telephonenumber=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'cn:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'sn:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'uid:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'telephonenumber:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <message>
               'ACI: Targetattr: Targetattr Not Equals Three Attributes, user searching non-targeted entry but with targeted attributes'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'telephonenumber=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetattr: Targetattr Not Equals Three Attributes, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetattr: Targetattr Not Equals Three Attributes, user searching previously targeted entry and targeted attributes'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'telephonenumber=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
      
  <!---
    Place test-specific test information here.
    The tag, TestMarker, must be the same as the tag, TestSuiteName.
    #@TestMarker                ACI Targetattr Tests
    #@TestName                  Attribute mispelled or non-existent in the entry - Use Not Equals
    #@TestIssue                 none
    #@TestPurpose               Test if an aci is allowed where the targetattr has an attribute not in the entry
    #@TestPreamble              none
    #@TestStep                  Admin adds an aci to an existing entry
                                that has specifies a non-existent attribute for the targetattr.
    #@TestStep                  Client searches entry with the targeted dn for the targetattr.
    #@TestPostamble             none
    #@TestResult                Success if OpenDS returns 0 for all ldap operations
                                and no attributes are returned.
  -->
  <function name="aci_targetattr_006" scope="local">
    <testcase name="getTestCaseName('Bad Targetattr')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <script>
                curr_aci_ldif_file = 'add_aci5.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targetattr/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetattr: Bad Targetattr, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetattr: Bad Targetattr, user searching targeted entry and targeted attribute'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'cn:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <message>
               'ACI: Targetattr: Bad Targetattr, user searching non-targeted entry but with targeted attribute'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetattr: Bad Targetattr, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetattr: Bad Targetattr, user searching previously targeted entry and targeted attribute'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
  
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targetattr Tests
      #@TestName                  Multiple targetattrs
      #@TestIssue                 none
      #@TestPurpose               Test if an aci is allowed to contain multiple targetattrs
      #@TestPreamble              none
      #@TestStep                  Admin adds an aci to an existing entry
                                  that has multiple targetattrs.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 21
  -->
  <function name="aci_targetattr_007" scope="local">
    <testcase name="getTestCaseName('Multiple Targets')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <script>
                curr_aci_ldif_file = 'add_aci6.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targetattr/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetattr: Multiple Targetattrs - add aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
              }
            </call>

            <message>
               'ACI: Targetattr: Multiple Targets - check aci'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsBaseDN'         : 'ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'extraParams'      : '-s base' ,
                'attributes'       : 'aci' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'aci:' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
        
  <!--
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targetattr Tests
      #@TestName                  targetattr mispelled
      #@TestIssue                 none
      #@TestPurpose               Test if an aci is allowed that has the keyword targetattr mispelled
      #@TestPreamble              none
      #@TestStep                  Admin adds an aci to an existing entry
                                  that has multiple targetattrs.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 21
  -->
  <function name="aci_targetattr_008" scope="local">
    <testcase name="getTestCaseName('Keyword Targetattr Mispelled')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <script>
                curr_aci_ldif_file = 'add_aci7.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targetattr/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetattr: Keyword Targetattr Mispelled - add aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
              }
            </call>

            <message>
               'ACI: Targetattr: Keyword Targetattr Mispelled - check aci'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsBaseDN'         : 'ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'extraParams'      : '-s base' ,
                'attributes'       : 'aci' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'aci:' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
  
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targetattr Tests
      #@TestName                  targetattr with missing quotes
      #@TestIssue                 none
      #@TestPurpose               Test if an aci is allowed that has the keyword targetattr with missing quotes
      #@TestPreamble              none
      #@TestStep                  Admin adds an aci to an existing entry
                                  that has a targetattr missing quotes.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 21
  -->
  <function name="aci_targetattr_009" scope="local">
    <testcase name="getTestCaseName('Targetattr With Missing Quotes')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <script>
                curr_aci_ldif_file = 'add_aci8.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targetattr/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetattr: Targetattr With Missing Quotes - add aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
              }
            </call>

            <message>
               'ACI: Targetattr: Targetattr With Missing Quotes - check aci'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'dsBaseDN'         : 'ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'extraParams'      : '-s base' ,
                'attributes'       : 'aci' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'aci:' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
  
  <!---
        Place test-specific test information here.
        The tag, TestMarker, must be the same as the tag, TestSuiteName.
        #@TestMarker                ACI Targetattr Tests
        #@TestName                  Targetattr With Spaces
        #@TestIssue                 none
        #@TestPurpose               Test with the targetattr that has spaces
        #@TestPreamble              Admin adds an aci to one branch with a targetattr with spaces.
        #@TestStep                  Client searches entry with the targeted dn for the targetattr.
        #@TestStep                  Client searches entry that does not have the targeted dn for the targetattr.
        #@TestStep                  Remove aci.
        #@TestStep                  Client searches entry with the previously targeted dn for the targetattr.
        #@TestPostamble             none
        #@TestResult                Success if OpenDS returns 0
                                    for all ldap operations. 
                                    Entry is returned only for step 1 
                                    and only with the specified attribute.
    -->
  <function name="aci_targetattr_010" scope="local">
    <testcase name="getTestCaseName('Targetattr With Spaces')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <script>
                curr_aci_ldif_file = 'add_aci9.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targetattr/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetattr: Targetattr With Spaces, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/%s' % (remote.data,curr_aci_ldif_file) }
            </call>

            <message>
               'ACI: Targetattr: Targetattr With Spaces, user searching targeted entry and targeted attribute'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'cn:' ,
                  'expectedResult'     : '1' }
            </call>
            
            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'telephoneNumber:' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetattr: Targetattr With Spaces, user searching non-targeted entry but with targeted attribute'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetattr: Targetattr With Spaces, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Targetattr: Targetattr With Spaces, user searching previously targeted entry and targeted attribute'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'attributes'       : 'cn sn uid telephonenumber' }
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
              
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>

  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targetattr Tests
      #@TestName                  Targetattr not equals wildcard 
      #@TestIssue                 none
      #@TestPurpose               Test with the targetattr not equal to wildcard
      #@TestPreamble              Admin adds an aci with the target equal to the dn of one existing branch.
      #@TestStep                  Client searches entry with the targeted branch dn.
      #@TestStep                  Client searches entry that is not with the targeted branch dn.
      #@TestStep                  Remove aci.
      #@TestStep                  Client searches entry with the previously targeted branch dn.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 0
                                  for all ldap operations, and
                                  and no entries are returned for any ldapsearch step.
  -->
  <function name="aci_targetattr_011" scope="local">
    <testcase name="getTestCaseName('Targetattr Not Equals Wildcard')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>
                          
            <script>
                curr_aci_ldif_file = 'add_aci10.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targetattr/%s' % (local.data,curr_aci_ldif_file));
            </script>
    
            <message>
               'ACI: Target: Targetattr Not Equals Wildcard, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'      : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'      : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'        : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'      : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 0
              }
            </call>

            <message>
               'ACI: Target: Targetattr Not Equals Wildcard, user searching targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'      : 'cn sn uid'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Target: Targetattr Not Equals Wildcard, user searching non-targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'       : 'cn sn uid'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Target: Targetattr Not Equals Wildcard, admin deleting aci'
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/del_aci.ldif' % remote.data }
            </call>

            <message>
               'ACI: Target: Targetattr Not Equals Wildcard, user searching previously targeted entry'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'objectclass=*'  ,
                'attributes'      : 'cn sn uid'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'checktestStringNotPresent'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=aci branch,o=ACI Tests' }
            </call>
                
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
              
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targetattr Tests
      #@TestName                  Targetattr equals one attribute with wildcard
      #@TestIssue                 none
      #@TestPurpose               Test with the targetattr set equal to a specific attribute with wildcard
      #@TestPreamble              Admin adds an aci to one branch with the targetattr equal to a specific attribute.
      #@TestStep                  Client searches entry with the targeted dn for the targetattr.
      #@TestStep                  Client searches entry that does not have the targeted dn for the targetattr.
      #@TestStep                  Remove aci.
      #@TestStep                  Client searches entry with the previously targeted dn for the targetattr.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 21.
  -->
  <function name="aci_targetattr_012" scope="local">
    <testcase name="getTestCaseName('Targetattr Equals One Attribute with wildcard')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <script>
                curr_aci_ldif_file = 'add_aci11.ldif'
                curr_aci=retrieve_aci('%s/aci/aci_targetattr/%s' % (local.data,curr_aci_ldif_file));
            </script>
      
            <message>
               'ACI: Targetattr: Targetattr Equals One Attribute with wildcard, preamble adding aci,\n %s' % curr_aci
            </message>

            <call function="'modifyEntry'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD ,
                'entryToBeModified'   : '%s/aci/aci_targetattr/%s' % (remote.data,curr_aci_ldif_file) ,
                'expectedRC'          : 21
              }
            </call>
  
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>
  
  <!---
      Place test-specific test information here.
      The tag, TestMarker, must be the same as the tag, TestSuiteName.
      #@TestMarker                ACI Targetattr Tests
      #@TestName                  Postamble
      #@TestIssue                 none
      #@TestPurpose               Test default aci settings
      #@TestPreamble              none
      #@TestStep                  Client searches entry for an attribute in a branch dn.
      #@TestStep                  Client searches entry for an attribute in another branch dn.
      #@TestPostamble             none
      #@TestResult                Success if OpenDS returns 0
                                  and no entries are returned 
                                  for all operations.
  -->
  <function name="aci_targetattr_013" scope="local">
    <testcase name="getTestCaseName('Targetattr Postamble')">                     
      <sequence> 
        <try>
          <sequence>
       
            <call function="'testCase_Preamble'"/>

            <message>
               'Test Name = %s' % STAXCurrentTestcase
            </message>

            <message>
               'ACI: Targetattr: Postamble - existing branch, user searching entry that will be targeted in future tests'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'attributes'       : 'cn sn uid telephonenumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
               'ACI: Targetattr: Postamble - existing branch, user searching entry that will be non-targeted in future tests'
            </message>

            <call function="'SearchObject'">
              { 'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'     : 'uid=auser,ou=people,o=ACI Tests,dc=example,dc=com' ,
                'dsInstancePswd'   : 'ACIRules' ,
                'dsBaseDN'         : 'uid=tmorris,ou=People,ou=non-aci branch,o=ACI Tests,dc=example,dc=com' ,
                'dsFilter'         : 'cn=*'  ,
                'attributes'       : 'cn sn uid telephonenumber'}
            </call>

            <script> 
             returnString = STAXResult[0][1]
            </script> 

            <call function="'searchStringForSubstring'">
                { 'returnString'       : returnString ,
                  'testString'         : 'dn: uid=tmorris,ou=People,ou=non-aci branch,o=ACI Tests' ,
                  'expectedResult'     : '0' }
            </call>
            
            <message>
                 'ACI: Targetattr: Postamble - Resetting Search Global ACI'
            </message>
  
            <call function="'modifyGlobalAci'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST ,
                  'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                  'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD ,
                  'aciValue'               : GLOBAL_ACI_SEARCH ,
                  'opType'                 : 'add' }
            </call>
            
          </sequence>
  
          <catch exception="'STAXException'" typevar="eType" var="eInfo">
            <message log="1" level="'fatal'">
              '%s: Test failed. eInfo(%s)' % (eType,eInfo)
            </message>
          </catch>
          <finally>
            <sequence>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </finally>
        </try>
      </sequence>
    </testcase>
  </function>

</stax>
