<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2007-2009 Sun Microsystems, Inc.
 !      Portions Copyright 2011-2013 ForgeRock AS
 ! -->
<stax>
  <defaultcall function="main_aci"/>
  <function name="main_aci">
    <function-list-args>
      <function-required-arg name="STAXParentID"/>
    </function-list-args>
    <sequence>

      <try>
        <block name="'aci'">
        
          <sequence>
  
            <!--- Load the job environment for the test group execution -->
            <import machine="STAF_LOCAL_HOSTNAME"
                    file="'%s/environment.xml' % TESTS_FUNCTIONS_DIR" />
            <call function="'loadJobEnvironment'">
                 { 'parent' : STAXParentID }
            </call>
            
            <script>
              CurrentTestPath['group']='aci'
              
              import re
              if UPGRADE_OPENDJNAME != '' and re.search('2.4.*',UPGRADE_OPENDJNAME) is not None:
                # UPGRADE MODE
                # Only for upgrade from 2.4.x
                GLOBAL_ACI_SEARCH="(targetattr!=\"userPassword||authPassword||changes||changeNumber||changeType||changeTime||targetDN||newRDN||newSuperior||deleteOldRDN||targetEntryUUID||targetUniqueID||changeInitiatorsName||changeLogCookie\")(version 3.0; acl \"Anonymous read access\"; allow (read,search,compare) userdn=\"ldap:///anyone\";)"
              else:
                # NORMAL MODE
                GLOBAL_ACI_SEARCH="(targetattr!=\"userPassword||authPassword||changes||changeNumber||changeType||changeTime||targetDN||newRDN||newSuperior||deleteOldRDN||targetEntryUUID||changeInitiatorsName||changeLogCookie||includedAttributes\")(version 3.0; acl \"Anonymous read access\"; allow (read,search,compare) userdn=\"ldap:///anyone\";)"
            </script>
            
            <call function="'testGroup_Preamble'"/>

            <!-- List of ACI test suites to run -->
            <script>
              suiteList=[]
              suiteList.append('global_acis')
              suiteList.append('target')
              suiteList.append('targetattr')
              suiteList.append('targetfilter')
              suiteList.append('targattrfilter')
              suiteList.append('targetscope')
              suiteList.append('targetcontrol')
              suiteList.append('delete_entry')
              suiteList.append('add_entry')
              suiteList.append('modify_entry')
              suiteList.append('compare_entry')
              suiteList.append('modify_rdn')
              suiteList.append('modify_filter')
              suiteList.append('rdn_wildcards')
              suiteList.append('bindtypes')
              suiteList.append('proxy_auth')
              suiteList.append('effective_rights')
#OOS              suiteList.append('import')
              suiteList.append('multi_acis')
            </script>

            <call function="'testSuite_Run'">
              { 'suites' : suiteList ,
                'group'  : 'aci' }
            </call>
                                    
          </sequence>
        </block>
      <catch exception="'STAXException.TestGroupException'">
        <sequence>
          <message log="1" level="'fatal'">'Execution of Test Group Failed'</message>
        </sequence>
      </catch>        
      <finally>
        <!-- Test Group postamble -->
        <call function="'testGroup_Postamble'"/>
      </finally>
      </try>

    </sequence>
  </function>
</stax>
