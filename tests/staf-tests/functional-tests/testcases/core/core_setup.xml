<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2006-2009 Sun Microsystems, Inc.
 ! -->
<stax>
  <defaultcall function="core_setup" />
  <function name="core_setup">
    <function-prolog>
      Set up the core test group
    </function-prolog>
    <function-map-args>
      <function-arg-def name="initData" type="optional" default="True">
        <function-arg-description>
          Initialize the data for the core test group
        </function-arg-description>
        <function-arg-property name="type" value="integer"/>
      </function-arg-def>
      <function-arg-def name="loadData" type="optional" default="True">
        <function-arg-description>
          Load the data for the core test group
        </function-arg-description>
        <function-arg-property name="type" value="integer"/>
      </function-arg-def>
    </function-map-args>

    <sequence>
      <block name="'setup'">
        <sequence>
          <block name="'Block Create DS Topology'">
          <!-- Create the topology necessary to the test group/suite -->
            <sequence>
              <message>
                'Create DS topology as described in config.py'
              </message>
              <call function="'createTopology'">
                { 'initialiseInstance' : initData }
              </call>
              <call function="'checkRC'">
                { 'returncode' : RC ,
                  'result'     : STAXResult
                }
              </call>
            </sequence>
            <!--- End Block Create DS Topology -->  
          </block>
          
          <block name="'Block DS Process Active'">      
            <!--- Start DS -->
            <sequence>
              <message>
                'Start DS to run on port %s' % (DIRECTORY_INSTANCE_PORT)
              </message>
              <!--- Start DS -->
              <call function="'StartDsWithScript'">
               { 'location'  : STAF_REMOTE_HOSTNAME }
              </call>
              <!--- Check that DS started -->
              <call function="'isAlive'">
                { 'noOfLoops'        : 10 ,
                  'noOfMilliSeconds' : 2000
                }
              </call>
            </sequence>
            <!--- End Block DS Process Active -->
          </block>

          <if expr='loadData == True'>          
            <block name="'Block DS Load Data'">
              <!-- Load the data needed by the test suite -->      
              <sequence>
                <message>
                  'Add entries that are required for the Core Tests'
                </message>
                <call function="'addEntry'">
                  { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                    'dsInstancePort' : DIRECTORY_INSTANCE_PORT,
                    'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                    'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                    'entryToBeAdded' : '%s/core/ldifs/core_start.ldif'
                                       % remote.data,
                    'verbose'        : False
                  }
                </call>
                <message>
                  'Add 1000 extra entries that are required for some of the \
                  Core Tests'
                </message>
                <call function="'addEntry'">
                  { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                    'dsInstancePort' : DIRECTORY_INSTANCE_PORT,
                    'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                    'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                    'entryToBeAdded' : '%s/core/ldifs/core_test_1K.ldif'
                                       % remote.data,
                    'verbose'        : False
                  }
                </call>
              </sequence>
              <!-- End Block DS Load Data -->
            </block>
          </if>
        </sequence>
      </block>
     </sequence>
  </function>
</stax>
