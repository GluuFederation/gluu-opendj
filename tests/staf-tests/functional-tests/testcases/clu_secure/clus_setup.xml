<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2010 Sun Microsystems, Inc.
 ! -->
<stax>

  <defaultcall function="clus_setup" />

  <function name="clus_setup">

    <sequence>

      <block name="'clus_setup'">

        <sequence>

          <!--- Test Suite information
            #@TestSuiteName       setup
            #@TestSuitePurpose    Setup for the clus_secure test suite
            #@TestSuiteGroup      setup
            #@TestScript          clus_setup.xml
          -->
          <script>
            if not CurrentTestPath.has_key('group'):
              CurrentTestPath['group'] = 'clu_secure'
            CurrentTestPath['suite'] = STAXCurrentBlock
          </script>

          <call function="'testSuite_Preamble'"/>

          <!--- Test Case information
            #@TestMarker          setup
            #@TestName            setup: create DS topology
            #@TestIssue           none
            #@TestPurpose         Create the topology necessary to the
                                  test suite.
            #@TestPreamble        none
            #@TestStep            Create DS topology as described in config.py.
            #@TestPostamble       none
            #@TestResult          Success if createTopology returns 0.
          -->
          <testcase name="getTestCaseName('Create DS topology')">

            <sequence>
              
              <call function="'testCase_Preamble'"/>
              
              <message>
                'Create DS topology as described in config.py'
              </message>

              <call function="'createTopology'">
                { 'initialiseInstance' : False }
              </call>

              <call function="'checktestRC'">
                {
                'returncode' : RC ,
                'result'     : STAXResult
                }
              </call>
              
              <call function="'testCase_Postamble'"/>
              
            </sequence>

          </testcase>

          <!--- Test Case information
            #@TestMarker          setup
            #@TestName            setup: adding initial entries
            #@TestIssue           none
            #@TestPurpose         Load the data needed by the test suite.
            #@TestPreamble        none
            #@TestStep            Load the data needed by the test suite.
            #@TestPostamble       none
            #@TestResult          Success if importLdif returns 0.
          -->
          <testcase name="getTestCaseName('Load data')">

            <sequence>
              
              <call function="'testCase_Preamble'"/>
              
              <message>
                'Add initial entries'
              </message>

              <call function="'ImportLdifWithScript'">
                {
                'ldifFile' : '%s/clu_secure/clus_start.ldif' % remote.data
                }
              </call>

              <call function="'checktestRC'">
                {
                'returncode' : RC ,
                'result'     : STAXResult
                }
              </call>
              
              <call function="'testCase_Postamble'"/>
              
            </sequence>

          </testcase>

          <!--- Test Case information
            #@TestMarker          setup
            #@TestName            setup: start DS
            #@TestIssue           none
            #@TestPurpose         Start DS.
            #@TestPreamble        none
            #@TestStep            Start DS.
            #@TestPostamble       none
            #@TestResult          Success if StartDsWithScript returns 0.
          -->
          <testcase name="getTestCaseName('Start DS')">
            
            <sequence>
              
              <call function="'testCase_Preamble'"/>

              <message>
                'Start DS to run on port %s' % (DIRECTORY_INSTANCE_PORT)
              </message>
              
              <!--- Start DS -->
              <call function="'StartDsWithScript'">
                { 'location' : STAF_REMOTE_HOSTNAME }
              </call>

              <call function="'checktestRC'">
                {
                'returncode' : RC ,
                'result'     : STAXResult
                }
              </call>
              
              <!--- Check that DS started -->
              <call function="'isAlive'">
                {
                'noOfLoops'        : 5 ,
                'noOfMilliSeconds' : 2000
                }
              </call>
              
              <call function="'testCase_Postamble'"/>
              
            </sequence>
            
          </testcase>

          <call function="'testSuite_Postamble'"/>
          
        </sequence>

      </block>
      
    </sequence>

  </function>

</stax>
