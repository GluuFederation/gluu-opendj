<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2010 Sun Microsystems, Inc.
 !      Portions Copyright 2013 ForgeRock AS
 ! -->
<stax>

  <defaultcall function="clus_saslexternal_subjectdn"/>

  <function name="clus_saslexternal_subjectdn" scope="local">

    <sequence>

      <block name="'clus_saslexternal_subjectdn'">

        <sequence>

           <!--- Test Suite information
            #@TestSuiteName       SASL external subject DN to user attribute \
                                  check behaviors
            #@TestSuitePurpose    Test the results of ldap commands in the case
                                  of sasl external.
            #@TestSuiteGroup      ldapcompare check behavior tests
            #@TestScript          clus_saslexternal_subjectdn.xml
          -->
          <script>
            if not CurrentTestPath.has_key('group'):
              CurrentTestPath['group'] = 'clu_secure'
            CurrentTestPath['suite'] = STAXCurrentBlock
          </script>

          <call function="'testSuite_Preamble'"/>

          <!--- Test Case information
          #@TestMarker          SASL external subject DN to user attribute
                                check behaviors
          #@TestName            Subject subject DN :  server trust all
                                certificates
          #@TestPurpose         Test subject subject DN certificate mapper with
                                blind trust
          #@TestPreamble        none
          #@TestStep            Enable subject DN to user attribute
                                certificate mapper
          #@TestStep            Do a ldapsearch with client-200-cert
          #@TestStep            Create client-250_cert with
                                ds-certificate-subject-dn:uid=user.250,
                                ou=People,dc=com
          #@TestStep            Compare using client-250-cert
          #@TestPostamble       none
          #@TestResult          Success if ldapcompare with client-200-cert
                                return 'Invalid credentials' and using
                                client-250-cert return 'authorization ID
                                dn:uid=user.250,ou=People,dc=com'
          -->
          <testcase name="getTestCaseName('Subject DN to user attribute :  server trust all client certificates')">
            <sequence>

              <call function="'testCase_Preamble'"/>

              <!--- Enable Subject DN to user attribute with blind trust-->
              <message>
               'SASL External: configure :  Enable subject DN to user attribute \
                with blind trust'
              </message>
              <call function="'configureSASL'">
                {
                'dsInstanceHost' : DIRECTORY_INSTANCE_HOST ,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                'KeyMgr'         : 'JKSPROVIDER',
                'keystoreFile'   : 'config/serverkeystore',
                'keystorePin'    : 'keystorepass',
                'handlerName'    : 'EXTERNAL',
                'certMapper'     : 'Subject DN to User Attribute',
                'optionSaSL'     : '--set certificate-validation-policy:always',
                'certAlias'      : 'server-cert2'
                }
              </call>

              <message>
              'SASL External: Test subject DN : try to connect with user.200 \
               certificate'
              </message>
              <call function="'ldapSearchWithScript'">
                {
                'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_SSL_PORT ,
                'dsUseSSL'         : ' ' ,
                'dsTrustAll'       : ' ' ,
                'dsUseSASLExternal': ' ',
                'dsKeyStorePath'   : '%s/client_cert/clientkeystore' \
                                      %(InstanceInstallDir),
                'dsKeyStorePassword' : 'clientkeystorepass',
                'dsCertNickname'   : 'client-200-cert',
                'dsReportAuthzID'  : ' ',
                'dsBaseDN'         : 'dc=com' ,
                'dsFilter'         : 'uid=user.585' ,
                'dsAttributes'     : 'givenName',
                'expectedRC'       : 49
                }
              </call>

              <!---Test Subject DN to user attribute ldapcompare-->
              <message>
               'SASL External : Client certicate :Step 1. Generating user.250 \
                client certificate'
              </message>
              <call function="'genCertificate'">
                {
                'certAlias'       : 'client-250-cert' ,
                'dname'           : "uid=user.250,ou=People,dc=com",
                'keystore':'%s/client_cert/clientkeystore' %(InstanceInstallDir),
                'storepass'       : 'clientkeystorepass',
                'keypass'         : 'clientkeystorepass',
                'storetype'       : 'JKS'
                }
              </call>

              <message>
               'SASL External: Client certicate :Step 2. Self-Signing user.250 \
                client Certicate'
              </message>
              <call function="'SelfSignCertificate'">
                {
                'certAlias'       : 'client-250-cert' ,
                'storepass'       : 'clientkeystorepass',
                'keypass'         : 'clientkeystorepass',
                'keystore':'%s/client_cert/clientkeystore' %(InstanceInstallDir),
                'storetype'       : 'JKS'
                }
              </call>
              
              <message>
               'SASL External: export : export user.250 certificate'
              </message>
              <call function="'ExportCertificate'">
                {
                'certAlias'       : 'client-250-cert' ,
                'keystore'        : '%s/client_cert/clientkeystore' \
                                     %(InstanceInstallDir),
                'storepass'       : 'clientkeystorepass',
                'outputfile'      : '%s/client_cert/client-250-cert.txt' \
                                     %(InstanceInstallDir),
                'storetype'       : 'JKS',
                'format'          : 'rfc'
                }
              </call>

              <call function="'addCertificate'">
                {
                'userdn'            : 'uid=user.250,ou=People,dc=com',
                'user_cert_file_rfc': '%s/client_cert/client-250-cert.txt' \
                                       %(InstanceInstallDir),
                'ldif_path'         : '%s/client_cert/client-250-cert.ldif' \
                                       %(InstanceInstallDir)
                }
              </call>

              <message>
               'SASL External: configure :  add ds-certificate-subject-dn \
                attribute in user.250 entry'
              </message>
              <script>
                addsubjectdnattribute = \
                'clu_secure/clus_sasl_addsubjectdnattribute.ldif'
              </script>
              <call function="'ldapModifyWithScript'">
              {
              'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
              'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
              'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD,
              'dsInstancePort'   : DIRECTORY_INSTANCE_PORT,
              'dsFilename'       : '%s/%s' % (remote.data,addsubjectdnattribute),
              'expectedRC'       : 0
              }
              </call>

              <message>
                'SASL External: ldapcompare : compare different values'
              </message>

              <script>
                dncompare = 'uid=user.320,ou=people,dc=com'
              </script>

              <call function="'ldapCompareWithScript'">
                {
                'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_SSL_PORT ,
                'dsUseSSL'         : ' ' ,
                'dsTrustAll'       : ' ' ,
                'dsUseSASLExternal': ' ',
                'dsKeyStorePath'   : '%s/client_cert/clientkeystore' \
                                      %(InstanceInstallDir),
                'dsKeyStorePassword' : 'clientkeystorepass',
                'dsCertNickname'   : 'client-250-cert',
                'dsDn'             : ['street: 0901 Chestnut Street' ,'%s' \
                                      %dncompare],
                'expectedRC'       : 0
                }
              </call>

              <script>
                returnString = STAXResult[0][1]
              </script>
              <call function="'checktestString'">
                {
                'returnString'     : returnString ,
                'expectedString'   : 'Compare operation returned false'
                }
              </call>

              <message>
              'SASL External: ldapcompare :compare value is true'
              </message>
              <call function="'ldapCompareWithScript'">
                {
                'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_SSL_PORT ,
                'dsUseSSL'         : ' ' ,
                'dsTrustAll'       : ' ' ,
                'dsUseSASLExternal': ' ',
                'dsKeyStorePath'   : '%s/client_cert/clientkeystore' \
                                      %(InstanceInstallDir),
                'dsKeyStorePassword' : 'clientkeystorepass',
                'dsCertNickname'   : 'client-250-cert',
                'dsDn'             : ['street: 30901 Chestnut Street' ,'%s' \
                                      %dncompare] ,
                'expectedRC'       : 0
                }
              </call>

              <script>
                returnString = STAXResult[0][1]
              </script>
              <call function="'checktestString'">
                {
                'returnString'     : returnString ,
                'expectedString'   : 'Compare operation returned true'
                }
              </call>

              <call function="'testCase_Postamble'"/>

            </sequence>

          </testcase>

          <!--- Test Case information
          #@TestMarker          SASL external subject DN to user attribute
                                check behaviors
          #@TestName            Subject subject DN :  server TrustStore
          #@TestPurpose         Test subject subject DN certificate mapper with
                                TrustStore
          #@TestPreamble        none
          #@TestStep            Enable subject DN to user attribute certificate 
                                mapper with TrustStore
          #@TestStep            Do a ldapsearch with client-250-cert
          #@TestStep            Export and import client-250_cert into server
                                TrustStore
          #@TestStep            Compare using client-250-cert
          #@TestPostamble       none
          #@TestResult          Success if ldapcompare with client-250-cert
                                fail before import-export and return
                                'authorization ID
                                dn:uid=user.250,ou=People,dc=com after
          -->
          <testcase name="getTestCaseName('Subject DN to user attribute :  with trust file manager')">

            <sequence>

              <call function="'testCase_Preamble'"/>

              <!--- Test SASL External Subject DN to user attribute with truststore -->
              <message>
                'SASL External: configure :  Enable subject SN to user attribute \
                with TrustStore file'
              </message>

              <call function="'configureSASL'">
                {
                'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstanceDn'     : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'   : DIRECTORY_INSTANCE_PSWD,
                'KeyMgr'           : 'JKSPROVIDER',
                'optionSaSL'     : '--set certificate-validation-policy:always',
                'keystoreFile'     : 'config/serverkeystore',
                'keystorePin'      : 'keystorepass',
                'trustMgr'         : 'JKS',
                'truststoreFile'   : 'config/servertruststore',
                'truststorePin'    : 'truststorepass',
                'handlerName'      : 'EXTERNAL',
                'certMapper'       : 'Subject DN to User Attribute',
                'certAlias'        : 'server-cert2'
                }
              </call>

              <message>
                'SASL External: ldapcompare :compare value true but certificate \
                not in truststore'
              </message>

              <call function="'ldapCompareWithScript'">
                {
                'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_SSL_PORT ,
                'dsUseSSL'         : ' ' ,
                'dsTrustAll'       : ' ' ,
                'dsUseSASLExternal': ' ',
                'dsKeyStorePath'   : '%s/client_cert/clientkeystore' \
                                      %(InstanceInstallDir),
                'dsKeyStorePassword' : 'clientkeystorepass',
                'dsCertNickname'   : 'client-250-cert',
                'dsDn'             : ['street: 59000 Ridge Street' ,'%s' \
                                      %dncompare] ,
                'expectedRC'       : 81
                }
              </call>

              <!--- Add the user.250 certificate to the server truststore -->
              <message>
                'SASL External: import : import user.250 certificate to server \
                truststore'
              </message>

              <call function="'ImportCertificate'">
                {
                'certAlias' : 'client-250-cert',
                'inputfile' : '%s/client_cert/client-250-cert.txt'\
                               %(InstanceInstallDir),
                'keystore'  : '%s/config/servertruststore' %(InstanceInstallDir),
                'storepass' : 'truststorepass',
                'storetype' : 'JKS'
                }
              </call>

              <message>
               'SASL External: restart LDAPS connection handler to re-read trustore'
              </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST ,
                  'dsInstanceDn'   : DIRECTORY_INSTANCE_DN ,
                  'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                  'subcommand'     : 'set-connection-handler-prop',
                  'objectType'     : 'handler-name' ,
                  'objectName'     : 'LDAPS Connection Handler',
                  'optionsString'  : '--set enabled:false' ,
                  'expectedRC'     : 0
                }
              </call>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST ,
                  'dsInstanceDn'   : DIRECTORY_INSTANCE_DN ,
                  'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                  'subcommand'     : 'set-connection-handler-prop',
                  'objectType'     : 'handler-name' ,
                  'objectName'     : 'LDAPS Connection Handler',
                  'optionsString'  : '--set enabled:true' ,
                  'expectedRC'     : 0
                }
              </call>

              <call function="'ldapCompareWithScript'">
                {
                'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_SSL_PORT ,
                'dsUseSSL'         : ' ' ,
                'dsTrustAll'       : ' ' ,
                'dsUseSASLExternal': ' ',
                'dsKeyStorePath'   : '%s/client_cert/clientkeystore' \
                                      %(InstanceInstallDir),
                'dsKeyStorePassword' : 'clientkeystorepass',
                'dsCertNickname'   : 'client-250-cert',
                'dsDn'             : ['street: 3001 Chestnut Street' ,'%s' \
                                     %dncompare],
                'expectedRC'       : 0
                }
              </call>

              <script>
                returnString = STAXResult[0][1]
              </script>
              <call function="'checktestString'">
                {
                'returnString'     : returnString ,
                'expectedString'   : 'Compare operation returned false'
                }
              </call>

              <message>
                'SASL External: ldapcompare :compare true certificate not in \
                truststore'
              </message>

              <call function="'ldapCompareWithScript'">
                {
                'dsInstanceHost'   : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'   : DIRECTORY_INSTANCE_SSL_PORT ,
                'dsUseSSL'         : ' ' ,
                'dsTrustAll'       : ' ' ,
                'dsUseSASLExternal': ' ',
                'dsKeyStorePath'   : '%s/client_cert/clientkeystore' \
                                      %(InstanceInstallDir),
                'dsKeyStorePassword' : 'clientkeystorepass',
                'dsCertNickname'   : 'client-250-cert',
                'dsDn'             : ['street: 30901 Chestnut Street' ,'%s' \
                                     %dncompare] ,
                'expectedRC'       : 0
                }
              </call>

              <script>
                returnString = STAXResult[0][1]
              </script>
              <call function="'checktestString'">
                {
                'returnString'     : returnString ,
                'expectedString'   : 'Compare operation returned true'
                }
              </call>
             
              <call function="'testCase_Postamble'"/>

            </sequence>

          </testcase>

          <call function="'testSuite_Postamble'"/>

        </sequence>

      </block>

    </sequence>

  </function>

</stax>




