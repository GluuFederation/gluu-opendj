<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2007-2009 Sun Microsystems, Inc.
 !      Portions Copyright 2013 ForgeRock AS.
! -->
<stax>
  <defaultcall function="restart_db"/>
  <function name="restart_db" scope="local">
    <block name="STAXCurrentFunction">
      <try>
        <sequence>
          <script>
            CurrentTestPath['suite']=STAXCurrentFunction
          </script>
          <call function="'testSuite_Preamble'" />
          
          
          <!--- Test Suite information
            #@TestSuiteName      Restart tasks
            #@TestSuitePurpose   Validate the stop and restart functionality in mode task
            #@TestSuiteID        restart Tests
            #@TestSuiteGroup     restart
            #@TestGroup          tasks
            #@TestScript         restart_db.xml
            #@TestHTMLLink       http://opends.dev.java.net/
            -->

          <call function="'common_setup'">
            {
              'quickStart'    : True ,
              'startServer'   : True  ,
              'stopServer'    : False
            }
          </call>  

          <!--- Test Case information
            #@TestMarker          Restart tasks
            #@TestName            Restart task in asynchronous mode
            #@TestPurpose         Schedule a restart in task mode to be executed immedialy in asynchronous mode
            #@TestPreamble
            #@TestStep            Execute a restart in task
            #@TestPostamble
            #@TestResult
            -->
  
          <testcase name="getTestCaseName('schedule restart task for scheduled execution in asynchronous mode')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              
              
              <call function="'StopDsWithScript'">
                { 'location'  : STAF_REMOTE_HOSTNAME,
                'dsHost'      : DIRECTORY_INSTANCE_HOST,
                'dsAdminPort' : DIRECTORY_INSTANCE_ADMIN_PORT,
                'dsBindDN'    : DIRECTORY_INSTANCE_DN,
                'dsBindPwd'   : DIRECTORY_INSTANCE_PSWD,
                'dsRestart'   : ' '
                }
              </call>

              <!--- Check that DS started -->
              <call function="'isAlive'">
               { 'noOfLoops'		: 10 ,
                 'noOfMilliSeconds' : 2000
               }
              </call>

              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          
          <!--- Test Case information
            #@TestMarker          Restart tasks
            #@TestName            Stop task in asynchronous mode
            #@TestPurpose         Schedule a stop in task mode to be executed immedialy in asynchronous mode
            #@TestPreamble
            #@TestStep            Execute a stop in task mode
            #@TestPostamble
            #@TestResult
            -->
  
          <testcase name="getTestCaseName('schedule stop server task for scheduled execution in asynchronous mode')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              
              
              <call function="'StopDsWithScript'">
                { 'location'  : STAF_REMOTE_HOSTNAME,
                'dsHost'      : DIRECTORY_INSTANCE_HOST,
                'dsAdminPort' : DIRECTORY_INSTANCE_ADMIN_PORT,
                'dsBindDN'    : DIRECTORY_INSTANCE_DN,
                'dsBindPwd'   : DIRECTORY_INSTANCE_PSWD,
                }
              </call>
           
              <call function="'SearchObject'">
                { 'dsInstanceHost'  : DIRECTORY_INSTANCE_HOST ,
                'dsInstancePort'    : DIRECTORY_INSTANCE_PORT ,
                'dsInstanceDn'      : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'    : DIRECTORY_INSTANCE_PSWD ,
                'dsBaseDN'          : DIRECTORY_INSTANCE_SFX,
                'dsFilter'          : 'objectclass=*'	,
                'dsScope'           : 'base',
                'expectedRC'        :  91 }
              </call>
              
              <!--- Start DS -->
              <call function="'StartDsWithScript'">
                { 'location'  : STAF_REMOTE_HOSTNAME }
              </call>
  
              <!--- Check that DS started -->
              <call function="'isAlive'">
               { 'noOfLoops'		: 10 ,
                 'noOfMilliSeconds' : 2000
               }
              </call>
  
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case information
            #@TestMarker          Restart tasks
            #@TestName            Restart task in asynchronous mode with date in the past
            #@TestPurpose         Schedule a restart in task mode to be executed in asynchronous mode
                                  with date in the past
            #@TestPreamble
            #@TestStep            Execute a restart in task with date in the past
            #@TestStep            Specify the -t option with date in the past
            #@TestPostamble
            #@TestResult
            -->
  
          <testcase name="getTestCaseName('schedule restart task for scheduled execution with date in the past')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              
              
              <call function="'StopDsWithScript'">
                { 'location'  : STAF_REMOTE_HOSTNAME,
                'dsHost'      : DIRECTORY_INSTANCE_HOST,
                'dsAdminPort' : DIRECTORY_INSTANCE_ADMIN_PORT,
                'dsBindDN'    : DIRECTORY_INSTANCE_DN,
                'dsBindPwd'   : DIRECTORY_INSTANCE_PSWD,
                'dsRestart'   : ' ',
                'dsStopTime'  : '20061212000000',
                'expectedRC'  : 89,
                'knownIssue'  : 'OPENDJ-923'
                }
              </call>

              <script>
                returnString = STAXResult[0][1]
              </script>
              <call function="'checktestString'">
                {'returnString'     : returnString ,
                  'expectedString'  : 'The specified stop time \'20061212000000\' has already passed'
                }
              </call>
                                             
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
        </sequence>
        <finally>
          <sequence>
            <!-- Test Suite Cleanup -->
            <message>'Finally: Tasks Cleanup.'</message>
            <try>
              <call function="'common_cleanup'" />
            <catch exception="'STAFException'">
              <sequence>
                <message log="1" level="'fatal'">'Cleanup of test suite failed.'</message>
              </sequence>
            </catch>
            <finally>
              <call function="'testSuite_Postamble'"/>
            </finally>
            </try>
          </sequence>
        </finally>
      
      </try>
    </block>
  </function>
</stax>
