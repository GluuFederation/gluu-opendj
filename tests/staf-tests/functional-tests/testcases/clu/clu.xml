<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, exclude this CDDL HEADER in each
 ! file and exclude the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2007-2009 Sun Microsystems, Inc.
! -->
<stax>
  
  <defaultcall function="main_clu"/>
  
  <function name="main_clu">

    <function-list-args>
      <function-required-arg name="STAXParentID"/>
    </function-list-args>

    <sequence>

      <try>
            
      <block name="'clu'">
        
        <sequence>

          <!--- Load the job environment for the test group execution -->
          <import machine="STAF_LOCAL_HOSTNAME"
                  file="'%s/environment.xml' % TESTS_FUNCTIONS_DIR"/>
          <call function="'loadJobEnvironment'">
            { 'parent' : STAXParentID }
          </call>
          
          <!--- Test Group information
            #@TestGroupName          Clu tests
            #@TestGroupPurpose       Test the tools commands.
          -->
          <script>
            CurrentTestPath['group'] = 'clu'
            _group=CurrentTestPath['group']
          </script>
          
          <call function="'testGroup_Preamble'"/>
                          
          <script>
            suiteList = []
            suiteList.append('clu_ldapsearch_checkoptions')
            suiteList.append('clu_ldapsearch_checkbehavior')
            suiteList.append('clu_ldapmodify_checkoptions')
            suiteList.append('clu_ldapmodify_checkbehavior')
            suiteList.append('clu_ldapcompare_checkbehavior')
            suiteList.append('clu_ldapdelete_checkbehavior')
            suiteList.append('clu_base64_checkbehavior')
            suiteList.append('clu_status_checkbehavior')
            suiteList.append('clu_ldappasswordmodify_checkbehavior')
            suiteList.append('clu_ldifsearch_checkbehavior')
            suiteList.append('clu_verify-index_checkbehavior')
            suiteList.append('clu_rebuild-index_checkbehavior')
            suiteList.append('clu_encode-password_checkbehavior')
            suiteList.append('clu_make-ldif_checkbehavior')
            suiteList.append('clu_list-backends_checkbehavior')
            suiteList.append('clu_manage-tasks_checkbehavior')
            suiteList.append('clu_dbtest_checkbehavior')
            suiteList.append('clu_ldifmodify_checkbehavior')
            suiteList.append('clu_ldif-diff_checkbehavior')
          </script>

            <!-- Data global to this test group  -->

            <!-- Run the test suites -->
            <iterate  var="_suite" in="suiteList">
              <sequence>              
                <try>
                  <sequence>                  
                    <import machine="STAF_LOCAL_HOSTNAME"
                      file="'%s/testcases/%s/%s.xml' % (TESTS_DIR,_group,_suite)"/> 
                    <call function="'%s' % _suite" />
                  </sequence>
                <catch exception="'STAFException.TestSuite.SetupException'">
                  <sequence>
                    <message log="1" level="'fatal'">'Setup of test suite %s failed.' % _suite</message>
                  </sequence>
                </catch>
                <catch exception="'STAFException.TestSuite.MainException'">
                  <sequence>
                    <message log="1" level="'fatal'">'Main part of test suite %s failed.' % _suite</message>
                  </sequence>
                </catch>
                <catch exception="'STAFException.TestSuite.CleanupException'">
                  <sequence>
                    <message log="1" level="'fatal'">'Cleanup of test suite %s failed.' % _suite</message>
                  </sequence>
                </catch>
                </try>
              </sequence>
            </iterate>
                                    
          </sequence>
        </block>
      <catch exception="'STAXException.TestGroupException'">
        <sequence>
          <message log="1" level="'fatal'">'Execution of Test Group Failed'</message>
        </sequence>
      </catch>        
      <finally>
        <!-- Test Group postamble -->
        <call function="'testGroup_Postamble'"/>
      </finally>
      </try>

    </sequence>
  </function>
</stax>
