<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE stax SYSTEM "../../../shared/stax.dtd">
<!--
 ! CDDL HEADER START
 !
 ! The contents of this file are subject to the terms of the
 ! Common Development and Distribution License, Version 1.0 only
 ! (the "License").  You may not use this file except in compliance
 ! with the License.
 !
 ! You can obtain a copy of the license at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE
 ! or https://OpenDS.dev.java.net/OpenDS.LICENSE.
 ! See the License for the specific language governing permissions
 ! and limitations under the License.
 !
 ! When distributing Covered Code, include this CDDL HEADER in each
 ! file and include the License file at
 ! trunk/opends/resource/legal-notices/OpenDS.LICENSE.  If applicable,
 ! add the following below this CDDL HEADER, with the fields enclosed
 ! by brackets "[]" replaced with your own identifying information:
 !      Portions Copyright [yyyy] [name of copyright owner]
 !
 ! CDDL HEADER END
 !
 !      Copyright 2007-2009 Sun Microsystems, Inc.
! -->
<stax>
  <defaultcall function="logging_properties"/>
  <function name="logging_properties" scope="local">
    <block name="STAXCurrentFunction">
      <try>
        <sequence>

          <script>
            CurrentTestPath['suite']=STAXCurrentFunction
          </script>
          <call function="'testSuite_Preamble'" />
    
          <call function="'common_setup'">
            {
              'quickStart'    : True ,
              'startServer'   : True  ,
              'stopServer'    : False
            }
          </call>
          
          <!--- Test Suite information
            #@TestSuiteName       Log publisher properties Tests
            #@TestSuitePurpose    Verify the log publisher properties
            #@TestSuiteID         Logging
            #@TestSuiteGroup      Logging
            #@TestGroup           Logging
            #@TestScript          logging_properties.xml
            #@TestHTMLLink        http://opends.dev.java.net/
          -->
    
          
          <!--- Test Case : access logger -->
          <!---
            #@TestMarker     Log publisher properties Tests
            #@TestName       Publisher access logger properties
            #@TestIssue      
            #@TestPurpose    check the publisher access logger properties.
            #@TestPreamble   none
            #@TestStep       Check the publisher  Access Logger's properties are correctly set and get using dsconfig
            #@TestStep       Set a property
            #@TestStep       Get the property and check it has been correctly updated
            #@TestPostamble  none
            #@TestResult     Success if OpenDS returns 0 for all operations
          -->
          
          <testcase name="getTestCaseName('Access logger')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                '----  Check the Access logger s properties  -----'
              </message>
              
              <!--   create a logger  publisher-->         
              <message>
                '------  create logger publisher --'
              </message>
              
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                'subcommand'     : 'create-log-publisher',
                'objectType'     : 'publisher-name',
                'objectName'     :  'my File-Based Access Logger',
                'optionsString'  : '--type file-based-access --set asynchronous:false --set log-file-permissions:777 --set log-file:logs/access --set enabled:true ',
                'expectedRC'     : 0
                }
              </call>
              
              
              <!--   auto-flush  -->
              <message>'------  set auto-flush to true --' </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                'subcommand'     : 'set-log-publisher-prop',
                'objectType'     : 'publisher-name',
                'objectName'     :   'my File-Based Access Logger',
                'optionsString'  : '--set auto-flush:true',
                'expectedRC'     : 0
                } 
              </call>
              <message>
                '------  get auto-flush --'
              </message>
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD,
                'objectName'             : 'log-publisher',
                'propertyType'           : 'publisher',
                'propertyName'           : 'my File-Based Access Logger',
                'attributeName'          : 'auto-flush',
                'extraParams'            : '--advanced',
                'expectedAttributeValue' : 'true'
                }
              </call>
              <!--   append  -->
              <message>'------  set append  to false  --' </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                'subcommand'     : 'set-log-publisher-prop',
                'objectType'     : 'publisher-name',
                'objectName'     : 'my File-Based Access Logger',
                'optionsString'  : '--set append:false',
                'expectedRC'     : 0
                }
              </call>
              <message>'------  get append --' </message>     
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD,
                'objectName'             : 'log-publisher',
                'propertyType'           : 'publisher',
                'propertyName'           :  'my File-Based Access Logger',
                'attributeName'          : 'append',
                'extraParams'            : '--advanced',              
                'expectedAttributeValue' : 'false'
                }
              </call>
              
              <!--   asynchronous  -->
              <message>'------  set asynchronous  to true  --' </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD ,
                'subcommand'     : 'set-log-publisher-prop',
                'objectType'     : 'publisher-name',
                'objectName'     :  'my File-Based Access Logger',
                'optionsString'  : '--set asynchronous:true',
                'expectedRC'     : 0
                }
              </call>
              <message>'------  get asynchronous --' </message>     
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'       : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'       : DIRECTORY_INSTANCE_PSWD ,
                'objectName'             : 'log-publisher' ,
                'propertyType'           : 'publisher' ,
                'propertyName'           : 'my File-Based Access Logger',
                'attributeName'          : 'asynchronous',
                'extraParams'            : '--advanced',
                'expectedAttributeValue'         : 'true'  }
              </call>     
              
              <!--   buffer-size  -->     
              <message>'------  set buffer-size  to 10mb  --' </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost'       : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'       : DIRECTORY_INSTANCE_PSWD ,
                'subcommand'           : 'set-log-publisher-prop' ,    
                'objectType'              : 'publisher-name' ,
                'objectName'             :  'my File-Based Access Logger',
                'optionsString'           : '--set buffer-size:10mb',
                'expectedRC'             : 0 } 
              </call>  
              <message>'------  get buffer-size --' </message>     
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD,
                'objectName'             : 'log-publisher',
                'propertyType'           : 'publisher',
                'propertyName'           : 'my File-Based Access Logger',
                'attributeName'          : 'buffer-size',
                'extraParams'            : '--advanced',              
                'expectedAttributeValue' : '10 mb'
                }
              </call>
              
              <!--   time-interval  -->            
              <message>'------  set time-interval  to 3m  --' </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                'subcommand'     : 'set-log-publisher-prop',
                'objectType'     : 'publisher-name',
                'objectName'     : 'my File-Based Access Logger',
                'optionsString'  : '--set time-interval:3m',
                'expectedRC'     : 0
                }
              </call>
              <message>'------  get time-interval --' </message>
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD,
                'objectName'             : 'log-publisher',
                'propertyType'           : 'publisher',
                'propertyName'           : 'my File-Based Access Logger',
                'attributeName'          : 'time-interval',
                'extraParams'            : '-m s --advanced',           
                'expectedAttributeValue' : '180 s'
                }
              </call>
              
              <!--   log-file  -->
              <message>'------  set log-file  to logs/testaccess  --' </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                'subcommand'     : 'set-log-publisher-prop',
                'objectType'     : 'publisher-name',
                'objectName'     :  'my File-Based Access Logger',
                'optionsString'  : '--set log-file:logs/testaccess',
                'expectedRC'     : 0
                }
              </call>
              <message>'------  get log-file --' </message>
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD,
                'objectName'             : 'log-publisher',
                'propertyType'           : 'publisher',
                'propertyName'           : 'my File-Based Access Logger',
                'attributeName'          : 'log-file',
                'extraParams'            : '--advanced',                       
                'expectedAttributeValue' : 'logs/testaccess'
                }
              </call>
              <!--   log-file  -->
              <message>'------  set log-file  to logs/access  --' </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                'subcommand'     : 'set-log-publisher-prop',
                'objectType'     : 'publisher-name',
                'objectName'     :  'my File-Based Access Logger',
                'optionsString'  : '--set log-file:logs/access',
                'expectedRC'     : 0
                }
              </call>
              
              <!--   log-file-permissions  -->                         
              <message>'------  set log-file-permissions  to 777  --' </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                'subcommand'     : 'set-log-publisher-prop',
                'objectType'     : 'publisher-name',
                'objectName'     : 'my File-Based Access Logger',
                'optionsString'  : '--set log-file-permissions:777',
                'expectedRC'     : 0
                } 
              </call>
              <message>'------  get log-file-permissions --' </message>
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD,
                'objectName'             : 'log-publisher',
                'propertyType'           : 'publisher',
                'propertyName'           : 'my File-Based Access Logger',
                'attributeName'          : 'log-file-permissions',
                'extraParams'            : '--advanced',
                'expectedAttributeValue' : '777'
                }
              </call>
              
              <!--   queue-size  -->                         
              <message>'------  set queue-size  to 1000  --' </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD ,
                'subcommand'     : 'set-log-publisher-prop',
                'objectType'     : 'publisher-name',
                'objectName'     :  'my File-Based Access Logger',
                'optionsString'  : '--set queue-size:1000',
                'expectedRC'     : 0
                }
              </call>    
              <message>'------  get queue-size --' </message>
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD,
                'objectName'             : 'log-publisher',
                'propertyType'           : 'publisher',
                'propertyName'           : 'my File-Based Access Logger',
                'attributeName'          : 'queue-size',
                'extraParams'            : '--advanced', 
                'expectedAttributeValue' : '1000'
                }
              </call>
              
              <!--   suppress-synchronization-operations  -->
              <message>
                '------  set suppress-synchronization-operations  to 1000  --'
              </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                'subcommand'     : 'set-log-publisher-prop',
                'objectType'     : 'publisher-name',
                'objectName'     :  'my File-Based Access Logger',
                'optionsString'  : '--set suppress-synchronization-operations:true',
                'expectedRC'     : 0
                }
              </call>
              <message>
                '------  get suppress-synchronization-operations --'
              </message>
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD,
                'objectName'             : 'log-publisher',
                'propertyType'           : 'publisher',
                'propertyName'           : 'my File-Based Access Logger',
                'attributeName'          : 'suppress-synchronization-operations',
                'extraParams'            : '--advanced',
                'expectedAttributeValue' : 'true'
                }
              </call>
              
              <!--   suppress-internal-operations  -->
              <message>
                '------  set suppress-internal-operations  to false  --'
              </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD ,
                'subcommand'     : 'set-log-publisher-prop',
                'objectType'     : 'publisher-name',
                'objectName'     : 'my File-Based Access Logger',
                'optionsString'  : '--set suppress-internal-operations:false',
                'expectedRC'     : 0
                }
              </call>
              <message>
                '------  get suppress-synchronization-operations --'
              </message>
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD,
                'objectName'             : 'log-publisher',
                'propertyType'           : 'publisher',
                'propertyName'           : 'my File-Based Access Logger',
                'attributeName'          : 'suppress-internal-operations',
                'extraParams'            : '--advanced',
                'expectedAttributeValue' : 'false'
                }
              </call>
              
              <!--   delete  a logger  publisher-->
    
              <message>'------  delete logger publisher --' </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                'subcommand'     : 'delete-log-publisher',
                'objectType'     : 'publisher-name',
                'objectName'     : 'my File-Based Access Logger',
                'expectedRC'     : 0
                }
              </call>
              
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case : Error logger -->
          <!---
            #@TestMarker           Log publisher properties Tests
            #@TestName             Publisher error logger properties
            #@TestIssue                   
            #@TestPurpose          check the Publisher error logger properties.
            #@TestPreamble         none
            #@TestStep             Check the Publisher error Logger's properties are correctly set and get using dsconfig
            #@TestStep             Set a property
            #@TestStep             Get the property and check it has been correctly updated
            #@TestPostamble        none
            #@TestResult           Success if OpenDS returns 0 for all operations
          -->
          
          <testcase name="getTestCaseName('Error logger')">
            <sequence>
              <call function="'testCase_Preamble'"/>
              <message>
                '----  Check the Error logger s properties  -----'
              </message>
              <!--    default-severity  -->
              <message>
                '------  set default-severity to mild-error --'
              </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                'subcommand'     : 'set-log-publisher-prop',
                'objectType'     : 'publisher-name',
                'objectName'     :   'File-Based Error Logger',
                'optionsString'  : '--set default-severity:mild-error',
                'expectedRC'     : 0
                }
              </call>
              <message>'------  get default-severity --' </message>
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD,
                'objectName'             : 'log-publisher',
                'propertyType'           : 'publisher',
                'propertyName'           :  'File-Based Error Logger',
                'attributeName'          : 'default-severity',
                'extraParams'            : '--advanced',                
                'expectedAttributeValue' : 'mild-error'
                }
              </call>
              
              <!--  override-severity -->
              <message>'------  set override-severity    --' </message>
              
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD ,
                'subcommand'     : 'set-log-publisher-prop',
                'objectType'     : 'publisher-name',
                'objectName'     : 'File-Based Error Logger',
                'optionsString'  : '--set "override-severity:core=info,severe-error"',
                'expectedRC'     : 0
                }
              </call>
              <message>
                '------  get override-severity --'
              </message>
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD,
                'objectName'             : 'log-publisher',
                'propertyType'           : 'publisher',
                'propertyName'           : 'File-Based Error Logger',
                'attributeName'          : 'override-severity',
                'extraParams'            : '--advanced',                
                'expectedAttributeValue' : 'core=info,severe-error'
                }
              </call>
              <call function="'testCase_Postamble'"/>
            </sequence>
          </testcase>
          
          <!--- Test Case : Debug logger -->
          <!---
              #@TestMarker     Log publisher properties Tests
              #@TestName       Publisher Debug logger properties
              #@TestIssue      
              #@TestPurpose    check the Publisher Debug logger properties.
              #@TestPreamble   none
              #@TestStep       Check the Publisher Debug Logger's properties are correctly set and get using dsconfig
              #@TestStep       Set a property
              #@TestStep       Get the property and check it has been correctly updated
              #@TestPostamble  none
              #@TestResult     Success if OpenDS returns 0 for all operations
            -->
            
          <testcase name="getTestCaseName('Debug logger')">
            <sequence>
              <call function="'testCase_Preamble'" />
              <message>
                '----  Check the Debug loggers properties  -----'
              </message>
              
              <!--    default-debug-category  -->     
          
              <message>'------  set default-debug-category  --' </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                'subcommand'     : 'set-log-publisher-prop',
                'objectType'     : 'publisher-name',
                'objectName'     :   'File-Based Debug Logger',
                'optionsString'  : '--set default-debug-category:thrown',
                'expectedRC'     : 0
                }
              </call>
              <message>'------  get default-debug-category --' </message>     
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD,
                'objectName'             : 'log-publisher',
                'propertyType'           : 'publisher',
                'propertyName'           : 'File-Based Debug Logger',
                'attributeName'          : 'default-debug-category',
                'extraParams'            : '--advanced',              
                'expectedAttributeValue' : 'thrown'
                }
              </call>
              
              <!--  default-debug-level -->   
              <message>'------  set default-debug-level    --' </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost'  : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'    : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'  : DIRECTORY_INSTANCE_PSWD ,
                'subcommand'      : 'set-log-publisher-prop',
                'objectType'      : 'publisher-name',
                'objectName'      :  'File-Based Debug Logger',
                'optionsString'   : '--set default-debug-level:verbose',
                'expectedRC'      : 0
                }
              </call>
              <message>'------  get default-debug-level --' </message>
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD,
                'objectName'             : 'log-publisher',
                'propertyType'           : 'publisher',
                'propertyName'           : 'File-Based Debug Logger',
                'attributeName'          : 'default-debug-level',
                'expectedAttributeValue' : 'verbose'
                }
              </call>
              
              <!--  default-include-throwable-cause -->
              <message>
                '------  set default-include-throwable-cause    --'
              </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                'subcommand'     : 'set-log-publisher-prop',
                'objectType'     : 'publisher-name',
                'objectName'     :  'File-Based Debug Logger',
                'optionsString'  : '--set default-include-throwable-cause:true',
                'expectedRC'     : 0
                }
              </call>     
              <message>'------  get default-include-throwable-cause --' </message>     
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD,
                'objectName'             : 'log-publisher',
                'propertyType'           : 'publisher',
                'propertyName'           :  'File-Based Debug Logger',
                'attributeName'          : 'default-include-throwable-cause',
                'expectedAttributeValue' : 'true'
                }
              </call>
              
              <!--  default-omit-method-entry-arguments -->
              <message>
                '------  set default-omit-method-entry-arguments    --'
              </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                'subcommand'     : 'set-log-publisher-prop',
                'objectType'     : 'publisher-name',
                'objectName'     : 'File-Based Debug Logger',
                'optionsString'  : '--set default-omit-method-entry-arguments:true',
                'expectedRC'     : 0
                } 
              </call>
              <message>
                '------  get default-omit-method-entry-arguments --'
              </message>
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD,
                'objectName'             : 'log-publisher',
                'propertyType'           : 'publisher',
                'propertyName'           : 'File-Based Debug Logger',
                'attributeName'          : 'default-omit-method-entry-arguments',
                'expectedAttributeValue' : 'true'
                }
              </call>
              
              <!--  default-omit-method-return-value -->   
              <message>
                '------  set default-include-throwable-cause    --'
              </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost'       : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN ,
                'dsInstancePswd'       : DIRECTORY_INSTANCE_PSWD ,
                'subcommand'           : 'set-log-publisher-prop' ,    
                'objectType'              : 'publisher-name' ,
                'objectName'             :  'File-Based Debug Logger',
                'optionsString'           : '--set default-omit-method-return-value:true',
                'expectedRC'             : 0 } 
              </call>     
              <message>'------  get default-omit-method-return-value --' </message>     
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD,
                'objectName'             : 'log-publisher',
                'propertyType'           : 'publisher',
                'propertyName'           :  'File-Based Debug Logger',
                'attributeName'          : 'default-omit-method-return-value',
                'expectedAttributeValue' : 'true'
                }
              </call>
              
              <!--  default-throwable-stack-frames -->
              <message>
                '------  set default-throwable-stack-frames    --'
              </message>
              <call function="'dsconfig'">
                { 'dsInstanceHost' : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'   : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd' : DIRECTORY_INSTANCE_PSWD,
                'subcommand'     : 'set-log-publisher-prop',
                'objectType'     : 'publisher-name',
                'objectName'     :  'File-Based Debug Logger',
                'optionsString'  : '--set default-throwable-stack-frames:2',
                'expectedRC'     : 0
                }
              </call>
              <message>'------  get default-throwable-stack-frames --' </message>     
              <call function="'dsconfigGet'">
                { 'dsInstanceHost'         : DIRECTORY_INSTANCE_HOST,
                'dsInstanceDn'           : DIRECTORY_INSTANCE_DN,
                'dsInstancePswd'         : DIRECTORY_INSTANCE_PSWD,
                'objectName'             : 'log-publisher',
                'propertyType'           : 'publisher',
                'propertyName'           : 'File-Based Debug Logger',
                'attributeName'          : 'default-throwable-stack-frames',
                'expectedAttributeValue' : '2'
                }
              </call>
    
            </sequence>
          </testcase>  
          
        </sequence>
        <finally>
          <sequence>
            <!-- Test Suite Cleanup -->
            <message>'Finally: Global Log Properties Cleanup.'</message>
            <try>
              <call function="'common_cleanup'" />
            <catch exception="'STAFException'">
              <sequence>
                <message log="1" level="'fatal'">'Cleanup of test suite failed.'</message>
              </sequence>
            </catch>
            <finally>
              <call function="'testSuite_Postamble'"/>
            </finally>
            </try>
          </sequence>
        </finally>
      
      </try>
    </block>
  </function>
</stax>
